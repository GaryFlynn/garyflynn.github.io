[{"body":"","link":"https://garyflynn.com/","section":"","tags":null,"title":""},{"body":"","link":"https://garyflynn.com/tags/automation/","section":"tags","tags":null,"title":"Automation"},{"body":"","link":"https://garyflynn.com/tags/configure/","section":"tags","tags":null,"title":"Configure"},{"body":"","link":"https://garyflynn.com/tags/homelab/","section":"tags","tags":null,"title":"Homelab"},{"body":"","link":"https://garyflynn.com/post/","section":"post","tags":["index"],"title":"Posts"},{"body":"","link":"https://garyflynn.com/tags/","section":"tags","tags":null,"title":"Tags"},{"body":"","link":"https://garyflynn.com/tags/vmware/","section":"tags","tags":null,"title":"VMware"},{"body":"","link":"https://garyflynn.com/tags/vra/","section":"tags","tags":null,"title":"vRA"},{"body":"","link":"https://garyflynn.com/tags/vra-8/","section":"tags","tags":null,"title":"vRA 8"},{"body":"","link":"https://garyflynn.com/tags/vrealize/","section":"tags","tags":null,"title":"vRealize"},{"body":"By default, a vRealize Automation 8.x session log you into the Services page, when you and your users are greeted with the Quickstart banner. The easiest way to remove this is to configure a vSphere Cloud Account, however for some environments, vSphere isn't an endpoint used. In this case, to remove the banner, a simple API call is all that is required. The below code can be run from either the appliance directly, or from your desktop PC using cURL. Another option would be to run the same API calls in Postman.\nCreate Refresh Token Create the refresh token by running either of the code blocks below, depending on if you're using a local account or a domain user account.\nLocal Account - Generate the access token by running the commands below, after updating the url, username and password variables.\n1url=\u0026#39;https://vra8.homelab.local\u0026#39; 2username=\u0026#39;configadmin\u0026#39; 3password=\u0026#39;VMware1!\u0026#39; 4refresh_token=`curl -X POST \\ 5\u0026#34;$url/csp/gateway/am/api/login?access_token\u0026#34; \\ 6-H \u0026#39;Content-Type: application/json\u0026#39; \\ 7-H \u0026#39;Accept: application/json\u0026#39; \\ 8-d \u0026#39;{ 9\u0026#34;username\u0026#34;: \u0026#34;\u0026#39;$username\u0026#39;\u0026#34;, 10\u0026#34;password\u0026#34;: \u0026#34;\u0026#39;$password\u0026#39;\u0026#34; 11}\u0026#39; | jq -r .refresh_token` Domain User Account - Generate the access token by running the commands below, after updating the url, username, password and domain variables.\n1url=\u0026#39;https://vra8.homelab.local\u0026#39; 2username=\u0026#39;su_flynga\u0026#39; 3password=\u0026#39;VMware1!\u0026#39; 4domain=\u0026#39;homelab.local\u0026#39; 5refresh_token=`curl -X POST \\ 6\u0026#34;$url/csp/gateway/am/api/login?access_token\u0026#34; \\ 7-H \u0026#39;Content-Type: application/json\u0026#39; \\ 8-H \u0026#39;Accept: application/json\u0026#39; \\ 9-d \u0026#39;{ 10\u0026#34;username\u0026#34;: \u0026#34;\u0026#39;$username\u0026#39;\u0026#34;, 11\u0026#34;password\u0026#34;: \u0026#34;\u0026#39;$password\u0026#39;\u0026#34;, 12\u0026#34;domain\u0026#34;: \u0026#34;\u0026#39;$domain\u0026#39;\u0026#34; 13}\u0026#39; | jq -r .refresh_token` Create Access Token Once you have generated the API token, this is stored in the variable $refresh_token and is used to create an access token. Run the below command to generate your access token.\n1access_token=`curl -X POST \\ 2\u0026#34;$url/iaas/api/login\u0026#34; \\ 3-H \u0026#39;Content-Type: application/json\u0026#39; \\ 4-H \u0026#39;Accept: application/json\u0026#39; \\ 5-d \u0026#39;{ 6\u0026#34;refreshToken\u0026#34;: \u0026#34;\u0026#39;$refresh_token\u0026#39;\u0026#34; 7}\u0026#39; | jq -r .token` Hide Quickstart Banner Once you have generated the access token which is now stored in the variable $access_token, run the below command to disable the Quickstart banner.\n1curl -k -s -H \u0026#34;Content-Type: application/json\u0026#34; -H \u0026#34;Authorization: Bearer $access_token\u0026#34; \\ 2$url/iaas/api/configuration-properties?apiVersion=2021-07-15 -X PATCH \\ 3-d \u0026#39;{\u0026#34;key\u0026#34;:\u0026#34;quickstart.ui.disabled\u0026#34;, \u0026#34;value\u0026#34;:\u0026#34;true\u0026#34;}\u0026#39; The output from the above command will show the newly applied setting.\n{\u0026quot;key\u0026quot;:\u0026quot;quickstart.ui.disabled\u0026quot;,\u0026quot;value\u0026quot;:\u0026quot;true\u0026quot;}\nOnce this has run, the Quickstart banner will not be shown for any new sessions. There is no need to restart the server or any services / pods.\nNote: If you upgrade or patch vRealize Automation, the changes may be lost and need to be completed again.\n","link":"https://garyflynn.com/post/vrealize-automation-8x-hide-quickstart-ui/","section":"post","tags":["Automation","Configure","Homelab","VMware","vRA","vRA 8","vRealize"],"title":"vRealize Automation 8.x - Hide Quickstart UI"},{"body":"","link":"https://garyflynn.com/tags/aria/","section":"tags","tags":null,"title":"Aria"},{"body":"","link":"https://garyflynn.com/tags/explore/","section":"tags","tags":null,"title":"Explore"},{"body":"VMware Explore EU 2022 was personally my first ever large conference and what an event it was! The biggest benefit of attending for me was to finally meet so many people who are also part of the broader vCommunity, along with fellow vExperts and colleagues from vendors who I have been working very closely with over the past 2-3 years. To everyone I managed to say hello to, thank you for helping to make this a truly amazing event!\n VMware Aria - The Name You probably know by now that VMware has renamed the vRealize Suite to Aria, but do you know why the word Aria was chosen? Well...\n In music, an Aria is a self-contained piece for one voice, with or without instrumental or orchestral accompaniment, normally part of a larger work.\n-- Wikipedia\n VMware has historically used subtle musical references in its internal project naming, and given the announcements of Aria Hub and Aria Graph, this name starts to make a little more sense. That is, a hub of self-contained pieces.\nVMware Aria Hub and Graph At VMware Explore US 2022, we saw the announcement of VMware Aria and at the EU event, we saw first hand exactly what the product will look like, and what benefits it can bring to organisations. Aria Hub and Graph will become the new \u0026quot;front door\u0026quot; for not only the vRealize Suite, but also other VMware products (and even more!), and is only available through VMware Cloud Console (SaaS).\nVMware Aria and Graph are powered by GraphQL, which is a data query language which will aggregate data from across multiple sources including the vRealize Suite, Public Cloud providers (AWS, Azure, GCP), VMware Cloud providers (VMware Cloud on AWS, Azure VMware Solution and Google Cloud VMware Engine) and even third party tools (through extensibility) such as ServiceNow. Once Aria Hub and Graph have this wealth of data, it is able to become the source of truth, ensuring all of the individual apps have the correct and latest information. But what is the value in this?\nCurrently, if you have an AWS VM managed by vRA, all changes to the VM must be done through vRA so that it knows about those changes. If a user edits that same VM in the AWS console, vRA doesn't know that the VM has changed. The VM won't be updated in vRA and it won't be updated in any third-party tools such as a CMDB like ServiceNow. With VMware Aria and Graph, the GraphQL database is constantly polling all data sources, so when a change is made directly in AWS, GraphQL will spot this change immediately and the other applications will automatically be told about the change. This opens up the platform for new products such as Guardrails because now the Aria stack has full visibility into the environment.\nAnother benefit to the Aria Hub model is that currently VMware admins are required to configure endpoints in each and every product. For example, if your environment is running a multi-cloud model and you use the vRealize tools, currently you need to configure your vSphere Account, AWS Account and Azure Account in each vRealize tool including vRealize Automation, vRealize Operations and vRealize Network Insight. With Aria Hub, you configure the Cloud Account in one place, and the vRealize suite of products will discover these automatically so there is no need for duplicate configurations.\nThis all sounds great, but what about our on-premises environments? The word from VMware is that Aria Hub and Graph will be a SaaS only offering. Aria Hub and Graph aren't a new product, instead they are \u0026quot;the platform\u0026quot;. Aria Hub and Graph won't cost anything extra and will be free to use for VMware Cloud Console customers.\nAria Hub and Graph is clearly the focus for VMware, and with this being a SaaS only solution, the next logical question is \u0026quot;What is the future of on-premises releases?\u0026quot; VMware was happy to confirm that on-premises releases aren't going anywhere, however with the introduction of Aria Hub and Graph, I believe the SaaS option will be the logical step forward for most customers. Historically, customers have been reluctant to move to the SaaS offering. However, between the burden of monthly release updates and the value-add introduction of Aria Hub and Graph, the SaaS offering is now at the point that it is the logical choice.\nMore information is availableÂ here about the VMware Aria Hub Free Tier.\n","link":"https://garyflynn.com/post/takeaways-from-vmware-explore-eu-2022/","section":"post","tags":["VMware","Explore","Aria","vRealize"],"title":"Takeaways from VMware Explore EU 2022"},{"body":"VMware Explore 2022 was set to be a big event for VMware, with the infamous VMworld branding being changed to VMware Explore along with this being the first in person event since 2019, due to COVID-19. Sure enough, there was no shortage of announcements and information available for everyone this year. Last year at VMworld 2021 we had the announcement of Project Ensemble Tech PreviewÂ andÂ this year we saw this formalise into VMware Aria Hub. In fact, the biggest announcement to come out of the event is the announcement of VMware Aria!\n VMware Aria The biggest announcement is the new product VMware Aria Graph which is the original Project Ensemble and will capture and map in a single view, all of the different public and private cloud environments including different applications, users, configuration and associated dependencies.\nWith the launch of VMware Aria, VMware Cloud Management is being unified in four key aspects\n Offering: VMware Aria âA multi-cloud management portfolio for managing the cost, performance, configuration, and delivery of infrastructure and cloud native applications across any cloud Platform: VMware Aria Hub powered by VMware Aria Graph â Centralized views and controls powered by a graph-based data store that captures the resources and relationships of a multi-cloud environment Solutions: New End-to-End Services â Three new end-to-end solutions cutting across management disciplines to deliver cloud governance, cloud migration and business insights Portfolio: VMware Aria â Single family name to unify the VMware portfolio: vRealize, CloudHealth by VMware Suite, and Tanzu Observability  VMware Aria Products  VMware Aria Automation (formerly, vRealize Automation) VMware Aria Operations (formerly, vRealize Operations) VMware Aria Operations for Networks (formerly, vRealize Network Insight) VMware Aria Operations for Logs (formerly, vRealize Log Insight) VMware Aria Operations for Secure Clouds (formerly, CloudHealth Secure State) VMware Aria Cost powered by CloudHealth (formerly, CloudHealth) VMware Aria Guardrails VMware Aria Migration VMware Aria Business Insights VMware Skyline  More information is availableÂ here.\n","link":"https://garyflynn.com/post/vmware-explore-2022-cloud-management-announcements/","section":"post","tags":["VMware","Explore","vRealize","Aria"],"title":"VMware Explore US 2022 Cloud Management Announcements"},{"body":"","link":"https://garyflynn.com/tags/vmworld/","section":"tags","tags":null,"title":"VMworld"},{"body":"VMworld 2021 was still held online only this year, which meant there was no shortage of announcements and information available for anyone interested. With a few large announcements including theÂ Project Ensemble Tech PreviewÂ andÂ Skyline Advisor Pro, there is plenty to keep an eye on in this space. Below I've listed a few things for each of the vRealize Suite products which caught my attention. Leave a comment below on what you're looking forward to in this next release!\nvRealize Suite Lifecycle Manager 8.6  Snapshots created with vRSLCM can now be deleted! No more having to go to vCenter to clean up the snapshots. A very nice quality of life update. Topology View is being added to vRSLCM to quickly identify where nodes are deployed and how they are integrated with various other products. Outbound Notifications support is being added so that you can now be notified when vRSLCM identifies a critical issue or when a new patch or upgrade is available. Content Management enhancements. More information availableÂ here.  vRealize Automation 8.6  Code Stream workspace support for Kubernetes! This is a huge one for me, as previously only Docker was supported, but now Kubernetes can be configured as a valid workspace on Code Stream. Cloud Templates will support dynamic vRealize Orchestrator inputs. A very significant quality of life update! Create Custom Resources with ABX Actions. Previously Custom Resources had to be backed by vRO types, but now you will be able to Create, Read, Update and Delete ABX Action based Custom Resources. More information can be foundÂ here.  vRealize Operations 8.6  A brand new UI! Better integration between vROps and vRA so that users deploying vRA workloads to AWS, Azure and GCP can minitor their workloads in vROps to monitor the deployment attribute, performance, health, and utilisation. vRealize True Visibility Suite Storage and Compute management packs are now included for free with all editions of vROps. A great benefit so that you can now easily monitor your physical hardware. Public Cloud support. All AWS services are now supported in vROps, and many more services have been added for both Azure and GCP. More information is availableÂ here.  ","link":"https://garyflynn.com/post/vmworld-2021-vrealize-announcements/","section":"post","tags":["Automation","VMware","VMworld","vRealize","vRSLCM"],"title":"VMworld 2021 vRealize Announcements"},{"body":"","link":"https://garyflynn.com/tags/vrslcm/","section":"tags","tags":null,"title":"vRSLCM"},{"body":"By default, a vRealize Automation 8.x session will timeout after 30 minutes of inactivity. For those looking to increase the session timeout value, this hasn't been possible before vRealize Automation 8.5. This all changes with the release of vRealize Automation 8.5, as documented in the release notes here.\nTo increase the session timeout from the default 30 minutes, a simple API call is all that is required. The below code can be run from either the appliance directly, or from your desktop PC using cURL. Another option would be to run the same API calls in Postman.\nNote: From my testing, the embedded Orchestrator session timeout value is not updated. This may be intentional or a bug.\nCreate Refresh Token Create the refresh token by running either of the code blocks below, depending on if you're using a local account or a domain user account.\nLocal Account - Generate the access token by running the commands below, after updating the url, username and password variables.\n1url=\u0026#39;https://vra8.homelab.local\u0026#39; 2username=\u0026#39;configadmin\u0026#39; 3password=\u0026#39;VMware1!\u0026#39; 4refresh_token=`curl -X POST \\ 5\u0026#34;$url/csp/gateway/am/api/login?access_token\u0026#34; \\ 6-H \u0026#39;Content-Type: application/json\u0026#39; \\ 7-H \u0026#39;Accept: application/json\u0026#39; \\ 8-d \u0026#39;{ 9\u0026#34;username\u0026#34;: \u0026#34;\u0026#39;$username\u0026#39;\u0026#34;, 10\u0026#34;password\u0026#34;: \u0026#34;\u0026#39;$password\u0026#39;\u0026#34; 11}\u0026#39; | jq -r .refresh_token` Domain User Account - Generate the access token by running the commands below, after updating the url, username, password and domain variables.\n1url=\u0026#39;https://vra8.homelab.local\u0026#39; 2username=\u0026#39;su_flynga\u0026#39; 3password=\u0026#39;VMware1!\u0026#39; 4domain=\u0026#39;homelab.local\u0026#39; 5refresh_token=`curl -X POST \\ 6\u0026#34;$url/csp/gateway/am/api/login?access_token\u0026#34; \\ 7-H \u0026#39;Content-Type: application/json\u0026#39; \\ 8-H \u0026#39;Accept: application/json\u0026#39; \\ 9-d \u0026#39;{ 10\u0026#34;username\u0026#34;: \u0026#34;\u0026#39;$username\u0026#39;\u0026#34;, 11\u0026#34;password\u0026#34;: \u0026#34;\u0026#39;$password\u0026#39;\u0026#34;, 12\u0026#34;domain\u0026#34;: \u0026#34;\u0026#39;$domain\u0026#39;\u0026#34; 13}\u0026#39; | jq -r .refresh_token` Create Access Token Once you have generated the API token, this is stored in the variable $refresh_token and is used to create an access token. Run the below command to generate your access token.\n1access_token=`curl -X POST \\ 2\u0026#34;$url/iaas/api/login\u0026#34; \\ 3-H \u0026#39;Content-Type: application/json\u0026#39; \\ 4-H \u0026#39;Accept: application/json\u0026#39; \\ 5-d \u0026#39;{ 6\u0026#34;refreshToken\u0026#34;: \u0026#34;\u0026#39;$refresh_token\u0026#39;\u0026#34; 7}\u0026#39; | jq -r .token` Update Session Timeout Once you have generated the access token which is now stored in the variable $access_token, run the below command to update the Session Timeout value. Change the value below to reflect the correct value for your environment, in minutes. The below example is for 6 hours, or 360 minutes.\n1curl -k -s -H \u0026#34;Content-Type: application/json\u0026#34; -H \u0026#34;Authorization: Bearer $access_token\u0026#34; \\ 2$url/iaas/api/configuration-properties?apiVersion=2021-07-15 -X PATCH \\ 3-d \u0026#39;{\u0026#34;key\u0026#34;:\u0026#34;SESSION_TIMEOUT_DURATION_MINUTES\u0026#34;, \u0026#34;value\u0026#34;:\u0026#34;360\u0026#34;}\u0026#39; The output from the above command will show the newly applied setting.\n{\u0026quot;key\u0026quot;:\u0026quot;SESSION\\_TIMEOUT\\_DURATION\\_MINUTES\u0026quot;,\u0026quot;value\u0026quot;:\u0026quot;360\u0026quot;}\nOnce this has run, any new user sessions created will have the updated timeout value. There is no need to restart the server or any services / pods.\nNote: If you upgrade or patch vRealize Automation, the changes may be lost and need to be completed again.\n","link":"https://garyflynn.com/post/vrealize-automation-85-increase-session-timeout/","section":"post","tags":["Automation","Configure","Homelab","VMware","vRA","vRA 8","vRealize"],"title":"vRealize Automation 8.5+ - Increase Session Timeout"},{"body":"","link":"https://garyflynn.com/tags/hashicorp/","section":"tags","tags":null,"title":"HashiCorp"},{"body":"","link":"https://garyflynn.com/tags/iac/","section":"tags","tags":null,"title":"IaC"},{"body":"VMware has created a HashiCorp Terraform provider which can be used to set up your vRealize Automation (vRA) infrastructure, along with requesting deployments and consuming XaaS resources. This post will cover the basics of setting up vRA using Terraform.\nThe first two posts in this series cover the basics of Infrastructure as Code with vRA and Terraform along with creating your first Terraform configuration to deploy a vSphere virtual machine. To get started, have a read of the documentation available for either vRA 8 or vRA 7.\nThis post will assume that vRA 8 has been deployed using vRealize Suite Lifecycle Manager, the vIDM has been configured for the required external accounts and a Cloud Account and Cloud Zone have been created to reference a vSphere environment. The below will presume the default user account, in this case, \u0026quot;configadmin\u0026quot; has also been created and that the Terraform version is 0.14.11 which can be downloaded from here.\nCreate a vRA Project Create a new file called \u0026quot;main.tf\u0026quot; and define the required_providers block to be used, in this case, \u0026quot;vra\u0026quot; and define the source and version. Following this, create a provider block called \u0026quot;vra\u0026quot; and reference the variables which we'll create next.\n1terraform { 2required_version = \u0026#34;\u0026gt;= 0.13\u0026#34; 3required_providers { 4vra = { 5source = \u0026#34;vmware/vra\u0026#34; 6version = \u0026#34;0.3.5\u0026#34; 7} 8} 9} 1011provider \u0026#34;vra\u0026#34; { 12url = var.url 13refresh_token = var.refresh_token 14insecure = var.insecure 15} The next file is called \u0026quot;variable.tf\u0026quot; and it is where the variables are defined. Each variable block is created with the variable name, and it's best practice to define a description, type and default value.\n1# Input variable: url 2variable \u0026#34;url\u0026#34; { 3description = \u0026#34;The URL of the vRealize Automation environment either vRA 8.x or vRA Cloud\u0026#34; 4type = string 5default = \u0026#34;https://vra-fqdn\u0026#34; 6} 78# Input variable: refresh_token 9variable \u0026#34;refresh_token\u0026#34; { 10description = \u0026#34;The refresh token to connect to the vRealize Automation environment\u0026#34; 11type = string 12default = \u0026#34;\u0026#34; 13} 1415# Input variable: insecure 16variable \u0026#34;insecure\u0026#34; { 17description = \u0026#34;Should SSL verification be skipped? true = skip ssl verification\u0026#34; 18type = bool 19default = \u0026#34;false\u0026#34; 20} Create a new file called \u0026quot;projects.tf\u0026quot; and the first block to be created is a data source and for this we will retrieve the vRA Cloud Zone for the vSphere Cloud Zone which should already be created. The second block is a resource block, meaning that something will be created, in this case, a \u0026quot;vra_project\u0026quot;. Provide a name and description as a variable, along with your configuration to assign your existing vRA Cloud Zone to your new project. The first field is the zone_id retrieved from the previously defined data source, followed by the priority, max number of instances, cpu limit, memory limit and storage limit. The next few lines are optional, and set if resources should be shared from this project to other projects, any administrators and members that need to be added, an operational timeout set at the project level in case of long running operations, and the machine naming template.\n1data \u0026#34;vra_zone\u0026#34; \u0026#34;this\u0026#34; { 2name = var.zone_name 3} 45resource \u0026#34;vra_project\u0026#34; \u0026#34;this\u0026#34; { 6name = var.project_name 7description = var.project_description 89zone_assignments { 10zone_id = data.vra_zone.this.id 11priority = 1 12max_instances = 5 13cpu_limit = 16 14memory_limit_mb = 16384 15storage_limit_gb = 1024 16} 1718shared_resources = false 19administrators = [\u0026#34;flynnga@homelab.local\u0026#34;] 20members = [\u0026#34;flynng@homelab.local\u0026#34;] 21operation_timeout = 6000 22machine_naming_template = \u0026#34;$${resource.name}-$${####}\u0026#34; 23} With the \u0026quot;projects.tf\u0026quot; file now created, updated the \u0026quot;variables.tf\u0026quot; file with the new variables just used, to look like the below.\n1# Input variable: url 2variable \u0026#34;url\u0026#34; { 3description = \u0026#34;The URL of the vRealize Automation environment either vRA 8.x or vRA Cloud\u0026#34; 4type = string 5default = \u0026#34;https://vra-fqdn\u0026#34; 6} 78# Input variable: refresh_token 9variable \u0026#34;refresh_token\u0026#34; { 10description = \u0026#34;The refresh token to connect to the vRealize Automation environment\u0026#34; 11type = string 12default = \u0026#34;\u0026#34; 13} 1415# Input variable: insecure 16variable \u0026#34;insecure\u0026#34; { 17description = \u0026#34;Should SSL verification be skipped? true = skip ssl verification\u0026#34; 18type = bool 19default = \u0026#34;false\u0026#34; 20} 2122# Input variable: project_name 23variable \u0026#34;project_name\u0026#34; { 24description = \u0026#34;vRA Project Name to be added to the project\u0026#34; 25type = string 26default = \u0026#34;\u0026#34; 27} 2829# Input variable: project_description 30variable \u0026#34;project_description\u0026#34; { 31description = \u0026#34;vRA Project Description to be added to the project\u0026#34; 32type = string 33default = \u0026#34;\u0026#34; 34} 3536# Input variable: zone_name 37variable \u0026#34;zone_name\u0026#34; { 38description = \u0026#34;vRA Zone Name to be added to the project\u0026#34; 39type = string 40default = \u0026#34;\u0026#34; 41} The final step is to define the values of each variable. To do this, create a \u0026quot;variables.tfvars\u0026quot; file and enter your environmental details in the file, as per the example below. Remember, all *.tfvars files should not be stored in source control such as git, as the values will differ between environments.\n1url = \u0026#34;https://vra8.homelab.local\u0026#34; 2refresh_token = \u0026#34;UhIlbUxsIgFEpzdRtjZxouQH57X61KON\u0026#34; 3insecure = false 4project_name = \u0026#34;Development Web App\u0026#34; 5project_description = \u0026#34;A project for the development environment of the web app\u0026#34; 6zone_name = \u0026#34;vcenter-1.homelab.local\u0026#34; With all the files now created, run a \u0026quot;terraform plan\u0026quot; and confirm everything looks correct and that your new resource will be created, and then run \u0026quot;terraform apply\u0026quot;.\nOnce the apply command has finished, in vRA you will see the new project created with the properties configured exactly as set in the \u0026quot;projects.tf\u0026quot; file.\nWhilst this post only covers the creating of a vRA project, you can use this same process to configure most of vRA, with documentation available on the vRA Terraform provider here.\n","link":"https://garyflynn.com/post/setup-vrealize-automation-using-terraform/","section":"post","tags":["Hashicorp","Homelab","IaC","Terraform","VMware","vRA","vRealize"],"title":"Setup vRealize Automation using Terraform"},{"body":"","link":"https://garyflynn.com/tags/terraform/","section":"tags","tags":null,"title":"Terraform"},{"body":"To get started with HashiCorp Terraform, you can download the simple executable file from HashiCorp here. To understand the basics of Infrastructure as Code and Terraform, have a read of the post available here.\nTerraform configuration files are text files with a .tf file extension. To get started, create a new folder for this configuration, along with a file called vsphere.tf. The first part to creating a Terraform configuration file is to define the provider you will interact with. In this example, it will create a virtual machine using the vSphere provider. The vSphere provider has some required fields like the user, password and server name. Create the provider block referring to \u0026quot;vsphere\u0026quot; and set the required fields with valid values for your environment.\n1provider \u0026#34;vsphere\u0026#34; { 2# If you use a domain, set your login like this \u0026#34;Domain\\\\User\u0026#34; 3user = \u0026#34;administrator@vsphere.local\u0026#34; 4password = \u0026#34;VMware1!\u0026#34; 5vsphere_server = \u0026#34;vcenter-1.homelab.local\u0026#34; 67# If you have a self-signed cert 8allow_unverified_ssl = true 9} Following the provider, define any \u0026quot;data\u0026quot; sources needed, which are used to retrieve existing objects. In this example of creating a vSphere virtual machine, reference the existing data center, cluster, datastore, VM network and template objects. This is defined in the code below. You can see that the \u0026quot;name\u0026quot; values are used to locate each of the objects. These will be referenced later to retrieve the ID values, as you can also see in the \u0026quot;vsphere_resource_pool\u0026quot; data source.\n1data \u0026#34;vsphere_datacenter\u0026#34; \u0026#34;dc\u0026#34; { 2name = \u0026#34;vSAN Datacenter\u0026#34; 3} 45# If you don\u0026#39;t have any resource pools, put \u0026#34;/Resources\u0026#34; after cluster name 6data \u0026#34;vsphere_resource_pool\u0026#34; \u0026#34;pool\u0026#34; { 7name = \u0026#34;vSAN Cluster/Resources\u0026#34; 8datacenter_id = data.vsphere_datacenter.dc.id 9} 1011# Retrieve datastore information on vsphere 12data \u0026#34;vsphere_datastore\u0026#34; \u0026#34;datastore\u0026#34; { 13name = \u0026#34;vsanDatastore\u0026#34; 14datacenter_id = data.vsphere_datacenter.dc.id 15} 1617# Retrieve network information on vsphere 18data \u0026#34;vsphere_network\u0026#34; \u0026#34;network\u0026#34; { 19name = \u0026#34;VM_Network-DPortGroup\u0026#34; 20datacenter_id = data.vsphere_datacenter.dc.id 21} 2223# Retrieve template information on vsphere 24data \u0026#34;vsphere_virtual_machine\u0026#34; \u0026#34;template\u0026#34; { 25name = \u0026#34;centos-8\u0026#34; 26datacenter_id = data.vsphere_datacenter.dc.id 27} Once you have all of the required data sources, define the \u0026quot;resource\u0026quot; that is to be created. In this case, it will be the \u0026quot;vsphere_virtual_machine\u0026quot; type, where the configuration of the virtual machine is defined. Start by defining the VM name, along with how many CPUs and the amount of memory to be assigned (in MB). There are a few required fields such as the datastore_ID and resource_pool_ID, which are referred to using the \u0026quot;data\u0026quot; sources created earlier. Then set the guest_ID and scsi_type to reference the guest_id and scsi_type of the template VM by referencing the \u0026quot;data\u0026quot; source.\nThe network_id in the network_interface block is set to match the \u0026quot;data\u0026quot; source of the vSphere network.\nThe disk block is then defined where the VMDK label is defined, along with the size of the disk to be deployed (in GB).\nThe clone block is next, where the template VM is defined, referring to the \u0026quot;data\u0026quot; source of the template. The customization options are then set where the host_name, domain and IP configuration is set.\nThe final block in the \u0026quot;resource\u0026quot; is the remote-exec provisioner. A remote-exec provisioner is used to run a command or script on the provisioned resource. The script to be called is specified along with how to connect to the VM. In this case, a connection is made using the root credentials to the default IP address of the provisioned VM. The contents of the example script are also shown below.\n1# Set vm parameters 2resource \u0026#34;vsphere_virtual_machine\u0026#34; \u0026#34;demo\u0026#34; { 3name = \u0026#34;vm-one\u0026#34; 4num_cpus = 2 5memory = 4096 6datastore_id = data.vsphere_datastore.datastore.id 7resource_pool_id = data.vsphere_resource_pool.pool.id 8guest_id = data.vsphere_virtual_machine.template.guest_id 9scsi_type = data.vsphere_virtual_machine.template.scsi_type 1011# Set network parameters 12network_interface { 13network_id = data.vsphere_network.network.id 14} 1516# Use a predefined vmware template as main disk 17disk { 18label = \u0026#34;vm-one.vmdk\u0026#34; 19size = \u0026#34;30\u0026#34; 20} 2122clone { 23template_uuid = data.vsphere_virtual_machine.template.id 2425customize { 26linux_options { 27host_name = \u0026#34;vm-one\u0026#34; 28domain = \u0026#34;vm-one.homelab.local\u0026#34; 29} 3031network_interface { 32ipv4_address = \u0026#34;192.168.0.240\u0026#34; 33ipv4_netmask = 24 34dns_server_list = [\u0026#34;192.168.0.120\u0026#34;, \u0026#34;192.168.0.121\u0026#34;] 35} 3637ipv4_gateway = \u0026#34;192.168.0.1\u0026#34; 38} 39} 4041# Execute script on remote vm after this creation 42provisioner \u0026#34;remote-exec\u0026#34; { 43script = \u0026#34;scripts/example-script.sh\u0026#34; 44connection { 45type = \u0026#34;ssh\u0026#34; 46user = \u0026#34;root\u0026#34; 47password = \u0026#34;VMware1!\u0026#34; 48host = vsphere_virtual_machine.demo.default_ip_address 49} 50} 51} The final vsphere.tf file will look like this. It will contain the provider, data and resource elements.\n Note: Do not store your configuration in a version control system such as GitHub or GitLab as this example stores your credentials in the file. Instead, these would typically be stored in variables, where the variables are excluded from your git commits.\nOnce your file is complete, run the \u0026quot;terraform init\u0026quot; command in the folder which contains your vsphere.tf file. This will automatically download any providers that are referenced in your Terraform configuration file. Next, run the \u0026quot;terraform plan\u0026quot; command which will show you exactly what resources are to be created. In this example, it will be one vsphere_virtual_machine. If the plan looks correct, run the command \u0026quot;terraform apply --auto-approve\u0026quot; to provision your virtual machine. Congratulations! You should now have your new VM deployed in your vSphere environment.\n","link":"https://garyflynn.com/post/create-your-first-vsphere-terraform-configuration/","section":"post","tags":["IaC","HashiCorp","Homelab","Samples","Terraform","VMware","vSphere"],"title":"Create Your First vSphere Terraform Configuration"},{"body":"","link":"https://garyflynn.com/tags/samples/","section":"tags","tags":null,"title":"Samples"},{"body":"","link":"https://garyflynn.com/tags/vsphere/","section":"tags","tags":null,"title":"vSphere"},{"body":"On January 28th 2021, I presented at the Automation User Group about vRealize Automation and Terraform and how they work together to provide a new way to deploy your infrastructure. The recording of the session will be available here and the slides are available from here.\n vRealize Automation Cloud What is Infrastructure as Code? Two Approaches: Imperative vs Declarative What is Terraform (OSS)? Additional Resources  vRealize Automation Cloud VMware vRealize Automation (vRA) Cloud allows you to provide multi-cloud infrastructure and application delivery to your end-users. It enhances the visibility of your machines across your different private and public cloud providers, enables collaboration and provides continuous delivery and release automation.\nvRealize Automation Cloud is comprised of three services: Cloud Assembly, Service Broker and Code Stream. To understand these services more, have a read of this post.\n Available on-premises (vRA 8) or SaaS (vRA Cloud) Easy to Get Started âÂ All you need is a Credit Card Cheap to Learn â List Price ($ per Node) $0.03555/hour * Available Globally â US, Frankfurt, Sydney and Singapore Familiar to vRA 8 â Same code base, updated monthly  What is Infrastructure as Code? Infrastructure as Code (IaC) is a way to manage and provision your infrastructure by using machine-readable configuration files. These configuration files can then be stored in a version control system like GitHub or GitLab which enables you to share these configurations across your team.\nA benefit to using IaC is that it can speed up your deployment times significantly, whilst reducing your risk by creating consistent builds every time. Because the configuration is done in code, it is of course easily repeatable and you can reuse the same code to deploy across different environments such as development, user acceptance testing and production.\nTwo Approaches: Imperative vs Declarative There are two approaches to IaC languages and these are Imperative and Declarative.\nAn Imperative language is where you define the steps to be performed in your code, to achieve a given result. Examples of this include PowerCLI, vRO / JavaScript and Python.\nA Declarative language is where you define what end result you want, and not the exact steps or the 'how'. Examples include Terraform, Ansible, Puppet, Chef, PowerShell DSC.\nWhat is Terraform (OSS)? Terraform OSS is an open-source, free and simple executable file. It enables you to write your Infrastructure as Code in the HashiCorp Configuration Language (HCL). The real value from Terraform comes with the integration with providers. Today there are over 200 provider integrations including vSphere, AWS, Azure, GCP, K8s, Datadog, Grafana, F5, MongoDB, Artifactory, GitLab available on the Terraform Registry here.\nAdditional Resources Below is a list of blog posts in this series and they will be linked here once they are published in the coming week.\n Create Your First vSphere Terraform Configuration Setup vRealize Automation using Terraform Create vRA Deployment using Terraform Extending vRA with Terraform Configurations Deploy a GCP Auto-Scaling Web Server Import Terraform Configurations to vRA  ","link":"https://garyflynn.com/post/vra-and-terraform-a-new-way-to-deploy/","section":"post","tags":["IaC","HashiCorp","Homelab","Samples","Terraform","VMware","vRA"],"title":"vRA \u0026 Terraform: A New Way to Deploy"},{"body":"","link":"https://garyflynn.com/tags/integration/","section":"tags","tags":null,"title":"Integration"},{"body":"","link":"https://garyflynn.com/tags/kubernetes/","section":"tags","tags":null,"title":"Kubernetes"},{"body":"vRealize Automation (vRA) 8.2 added support for changing the IP address range used by the internal Kubernetes cluster, which is great news as many organisation already use the 10.244.0.0/21 address space. Unfortunately if your network already uses the ranges 10.244.0.0/22 or 10.244.4.0/22, you will likely encounter issues, such a provisioning timeouts.\nTo resolve this issue in vRA 8.2, run the below commands to view your current configuration, and to update to a new range.\nWarning Please note, this is specifically for vRA 8.2. For any other version, please change the Internal Kubernetes IP range through vRealize Suite Lifecycle Manager.\n View your Current Configuration View your current configuration by running the command below. Two /22 subnets are shown, the cluster CIDR and the service CIDR.\n1vracli network k8s-subnets     Set your New Configuration To update the internal Kubernetes IP ranges, run the below command substituting the 192.168.0.0/22 and 192.168.4.0/22 subnets with your own.\n1vracli network k8s-subnets --cluster-cidr 192.168.0.0/22 --service-cidr 192.168.4.0/22 Once it is reconfigured, redeploy the application by running the 'clean' command\n1/opt/scripts/deploy.sh --onlyClean Followed by the 'deploy' command\n1/opt/scripts/deploy.sh Reset to Original Configuration To reset the internal Kubernetes IP ranges back to the default subnets, run the below command\n1vracli network k8s-subnets --cluster-cidr 10.244.0.0/22 --service-cidr 10.244.4.0/22 Once it is reconfigured, redeploy the application by running the 'clean' command\n1/opt/scripts/deploy.sh --onlyClean Followed by the 'deploy' command\n1/opt/scripts/deploy.sh Known Issue There is a bug in vRealize Automation 8.2 which causes the vRA appliance to not deploy / start-up properly, when the Kubernetes internal IP address space is changed to use the 192.168.0.0/16 address space. This post resolves the issue, while VMware develops a patch to resolve the issue permanently.\n","link":"https://garyflynn.com/post/vrealize-automation-8x-change-internal-kubernetes-ip-range/","section":"post","tags":["Homelab","Integration","Kubernetes","VMware","vRA","vRealize"],"title":"vRealize Automation 8.x â Change Internal Kubernetes IP Range"},{"body":"","link":"https://garyflynn.com/tags/prelude/","section":"tags","tags":null,"title":"Prelude"},{"body":"vRealize Automation (vRA) 8.0 introduced a completely new architecture by running the vRA application itself on top of a Kubernetes (k8s) cluster. Unfortunately this was released with a hardcoded IP address range used by the internal k8s cluster. If your corporate network happened to be using the same IP addresses that were selected by the k8s cluster, then you would likely see plenty of errors in vRA.\nThankfully, vRealize Automation 8.2 added support for changing the internal IP address range used by the Kubernetes cluster. Unfortunately, there is a bug in the code where only the 10.0.0.0/8 and 127.0.0.0/8 address spaces are supported. If you choose to use the 192.168.0.0/16 address space, the vRA deployment won't start-up. When running the command \u0026quot;kubectl get pods -n prelude\u0026quot;, the \u0026quot;catalog-service-app\u0026quot; pod will show as 0/1 Ready, and Running.\n1kubectl get pods -n prelude | grep \u0026#34;catalog-service-app\u0026#34;     You can run the \u0026quot;describe\u0026quot; command below and it will show the following error message:\n1kubectl describe pod catalog-service-app -n prelude Readiness probe failed: Get http://192.168.0.162:8000/actuator/health/readiness: dial tcp 192.168.0.162:8000 connect: connection refused\nThe issue is that the vRA pods are configured to bypass the proxy configuration (even if you haven't set up a proxy server), enabling them to communicate directly between each other. This is set up already for the 10.0.0.0/8 and 127.0.0.0/8 address spaces, but not the 192.168.0.0/16 address space.\nTo be clear, this is a bug in vRA 8.2 (including Hotfix 1), and VMware should be releasing a patch soon.\nTo resolve the issue, run the below commands. Log onto each of the appliances in your cluster and change directory.\n1cd /opt/python-modules Edit the proxy_config.py file.\n1vi $(find . -name proxy_config.py) Locate the configuration below, and change the 192.168.3.0/24 line to 192.168.0.0/16\n    Before\n    After\nOnce the file is updated, save and exit the file using \u0026quot;:wq\u0026quot;.\nYou can now deploy the vRA appliance by running the below command:\n1/opt/scripts/deploy.sh     ","link":"https://garyflynn.com/post/vrealize-automation-8x-vra-not-starting-if-k8s-ip-range-is-changed/","section":"post","tags":["Homelab","Kubernetes","Prelude","VMware","vRA","vRealize"],"title":"vRealize Automation 8.x - vRA Not Starting if K8s IP Range is Changed"},{"body":"","link":"https://garyflynn.com/tags/setup/","section":"tags","tags":null,"title":"Setup"},{"body":"vRealize Automation (vRA) 8.2 added support for running your Terraform (TF) configurations directly from the vRA interface. Simply register your code repository endpoint, either GitLab or GitHub, and select which Terraform configuration to run. The vRA logic will even map the deployed resources to your vRA Cloud Accounts, Cloud Zones, and deployed resource objects. This functionality is fantastic to extend the capabilities beyond the supported resource types. You could use the TF configurations to deploy an F5 load balancer, an Azure and AWS VM, as well as creating your Grafana dashboards and registering your Datadog agents all from a single configuration.\nI was very excited to take a look at this, and an issue soon popped up. Instead of vRA running the Terraform code directly from the vRA appliance, you need a separate Kubernetes (k8s) cluster configured as a Terraform runtime environment. Without it, you will get the \u0026quot;Terraform Runtime integration account not set up.\u0026quot; error message.\n    But isn't vRA 8 itself built on Kubernetes? Why can't we just run this locally?\nWhilst it 100% is not supported by VMware GSS, let's take a look at how to configure an external Terraform runtime environment this is actually the vRA internal Kubernetes environment.\nLog into your vRA appliance as \u0026quot;root\u0026quot; and run the command below.\n1cat /etc/kubernetes/admin.conf Copy the output to a notepad and we will use this shortly.\napiVersion: v1\nclusters:\n- cluster:\ncertificate-authority-data: \u0026lt;\u0026gt;\nserver: https://vra-k8s.local:6443\nname: kubernetes\ncontexts:\n- context:\ncluster: kubernetes\nuser: kubernetes-admin\nname: kubernetes-admin@kubernetes\ncurrent-context: kubernetes-admin@kubernetes\nkind: Config\npreferences: {}\nusers:\n- name: kubernetes-admin\nuser:\nclient-certificate-data: \u0026lt;\u0026gt;\nclient-key-data: \u0026lt;\u0026gt;\nNot the server field currently referenced the internal k8s hostname which is not accessible outside of the internal cluster. Update the server value with your fully-qualified domain name, keeping the 6443 port, just like the example below.\napiVersion: v1\nclusters:\n- cluster:\ncertificate-authority-data: \u0026lt;\u0026gt;\nserver: https://vra8.homelab.local:6443\nname: kubernetes\ncontexts:\n- context:\ncluster: kubernetes\nuser: kubernetes-admin\nname: kubernetes-admin@kubernetes\ncurrent-context: kubernetes-admin@kubernetes\nkind: Config\npreferences: {}\nusers:\n- name: kubernetes-admin\nuser:\nclient-certificate-data: \u0026lt;\u0026gt;\nclient-key-data: \u0026lt;\u0026gt;\nLog into your vRA environment and navigate to Cloud Assembly \u0026gt; Infrastructure \u0026gt; Connections \u0026gt; Integrations and select Add Integration \u0026gt; Terraform Runtime.\n    Provide a name, such as \u0026quot;vRA Internal\u0026quot;. Select \u0026quot;External kubeconfig\u0026quot; as the Runtime type, and paste in your updated configuration from above to the \u0026quot;Kubernetes kubeconfig\u0026quot; field. Make sure you haven't removed any values, and you have the updated external hostname.\nThe vRA services run under the \u0026quot;prelude\u0026quot; namespace internally, so we will utilise the same namespace. Enter \u0026quot;prelude\u0026quot; as the \u0026quot;Kubernetes namespace\u0026quot;.\n    Here you can also update the Terraform image version you wish to use. For my environment, I will use the latest version 12 build which is 0.12.29. You can also alter the configuration to increase the amount of CPU and Memory available to the Terraform pod. Validate your configuration and select Save.\n    Note that the Terraform image will be retrieved each time a Terraform configuration is run, as the pod is dynamically created at runtime and destroyed once the resources are provisioned. Your vRA appliance must have direct access to the internet to retrieve the terraform docker image. The implementation, unfortunately, doesn't respect the proxy configuration set in \u0026quot;vracli proxy\u0026quot;, so if you require a proxy to reach the internet, this setup will not work. Time to build a dedicated Kubernetes cluster...\nHopefully, a future release of vRealize Automation will allow you to run this internally natively and it will work with a proxy for access to the docker repository. For now, the only supported way is to deploy a Kubernetes cluster...\n","link":"https://garyflynn.com/post/vrealize-automation-82-terraform-configurations/","section":"post","tags":["Homelab","Setup","Terraform","VMware","vRA","vRealize"],"title":"vRealize Automation 8.2 - Terraform Configurations"},{"body":"","link":"https://garyflynn.com/tags/aws/","section":"tags","tags":null,"title":"AWS"},{"body":"","link":"https://garyflynn.com/tags/getting-started/","section":"tags","tags":null,"title":"Getting Started"},{"body":"vRealize Automation 8.x can integrate with several cloud providers, and to do this for your Amazon Web Services (AWS) environment, select Cloud Assembly \u0026gt; Infrastructure \u0026gt; Connections \u0026gt; Cloud Accounts and create each of the cloud integrations you require. For AWS, we simply need to head over to the AWS Console console.aws.amazon.comÂ and authenticate with the account which has access to the AWS account you want to integrate with.\nTo integrate vRA 8.x with AWS, there are 2 configuration IDs and some permissions that need to be set up which we need to complete and provide to the vRA portal. These are covered in the sections listed below.\n Access key ID and Secret access key vRA Portal Configuration  Access key ID and Secret access key Navigate to the Identity and Access Management console and create a new user by selecting IAM \u0026gt; Users \u0026gt; Add user. Enter an appropriate username and select Programmatic access for the access type.\n        On the Set permissions page, the user account will require the poweradmin group role and optionally set the \u0026quot;permissions boundary\u0026quot;.\n    On the next tab optionally set any tags applicable to your environment and on the following tab review the settings before creating the user.\n    Once the user account is created, the page is update to provide you with the Access key ID and the Secret access key. Copy both of these values as these are required in the vRA portal. Note that once you navigate away from this page, the credentials can not be retrieved.\nAccess key ID: AKIA2LRC63BIEPMEKLM5\nSecret access key: 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\n    vRA Portal Configuration Back in the vRA portal, select Cloud Assembly \u0026gt; Infrastructure \u0026gt; Connections \u0026gt; Cloud Accounts \u0026gt; Add Cloud Account \u0026gt; Microsoft Azure.\n    In the New Cloud Account page, copy in the two values we obtained from the AWS Console earlier, and select Validate to confirm the credentials are correct.\n    Enter a name for the Cloud Account and optionally a description. Under Configuration, select the regions to allow provisioning to, ensure the checkbox is selected to create a cloud zone for each of the selected regions, and under Capability tags, enter \u0026quot;cloud:aws\u0026quot;. This enable us to use tagging in the blueprint request forms to select the appropriate cloud account / endpoint to provision to. Once done, select Add.\n    Once the Cloud Account has been created, under Configure \u0026gt; Cloud Zones, you will see your selected regions each having their own Cloud Zones.\n    Once the Cloud Zone is created, no compute is associated with it automatically, so open the Cloud Zone and select the Compute tab. Cancelling back out will update the view in Cloud Zones to display the number of availability zones.\nIn more complex environments, you can Open the Cloud Zone and select the Compute tab, and for each availability zone, assign capability tags. If for example you have separate availability zones for dev, test and prod, you could assign the capability tag âenvironment:devâ to eu-west-2b, and \u0026quot;environment:test\u0026quot; \u0026amp; \u0026quot;environment:prod\u0026quot; to eu-west-2a, to ensure that dev workloads are placed only in the eu-west-2b availability zone, and the rest in eu-west-2a. The second part of this configuration is done in the blueprint request form.\n","link":"https://garyflynn.com/post/vrealize-automation-8x-setup-aws-cloud-account/","section":"post","tags":["Automation","AWS","Getting Started","Homelab","VMware","vRA","vRealize"],"title":"vRealize Automation 8.x - Setup Amazon Web Services Cloud Account"},{"body":"","link":"https://garyflynn.com/tags/install/","section":"tags","tags":null,"title":"Install"},{"body":"","link":"https://garyflynn.com/tags/lifecycle-manager/","section":"tags","tags":null,"title":"Lifecycle Manager"},{"body":"Part one of this blog covered the installation and configuration of vRSLCM which can be found here and this post will cover deploying your first application.\nCreate an Environment In vRSLCM, the concept of environments can mean two different things. It could mean Dev/Test/Prod where multiple applications are deployed in one environment or it could mean Dev vRA/Dev vROps/Test vRA/Test vROps where each environment and application combination has its own environment. In my homelab, I have gone with the latter understanding as there are some limitations placing all of the products in a single environment instance. In the Create Environment wizard, enter the information for which you wish to deploy. Select Next when this is complete.\n    On the next tab, the different products available are presented. I will be deploying a Small vROps 6.7 instance from scratch so I have select it as a New Install. Note the checkbox in the top right corner of each product which says which product to deploy. If deploying vRSLCM into a production environment, you have the option here to import your existing environment into vRSLCM. Scroll down and select Next.\n    On the next page the appliance configuration is supplied. Accept the EULA (if you do) and enter your product key for the product. Select the Infrastructure where you would like the application deployed. note the network must not be an Ephemeral Binding Port Group.\n    Enter the network details for the appliance\n    Select Use Generated Certificate if you generated a certificate in part one of this guide. The next section will cover the configuration of the application you are deploying.\n        Once all of the configuration is provided, vRSLCM will perform a Pre Check Validation of the parameters provided to ensure the deployment will succeed. In my environment, I was deploying to an Ephemeral Port Group which is not supported in vRSLCM so I moved to a Static Port Group and the Pre Check Validation succeed.\n    Once the validation has completed, in the next section you are able to download your configuration as code so that you can easily deploy this environment again. Once you have downloaded the configuration (even just as a backup), select Submit.\n    Once the request has been submitted, you can check the status on the Requests page in the left hand menu which will show you the pipeline which is used to deploy and configure the application. Once it has succeeded, you will be able to log in to the application using the default password you provided in the installation wizard.\n","link":"https://garyflynn.com/post/vrealize-lifecycle-manager-part-2-deploying-an-application/","section":"post","tags":["Configure","Install","Lifecycle Manager","VMware","vRealize","vRSLCM"],"title":"vRealize Lifecycle Manager Part 2 - Deploying an Application"},{"body":"","link":"https://garyflynn.com/tags/github/","section":"tags","tags":null,"title":"GitHub"},{"body":"","link":"https://garyflynn.com/tags/guide/","section":"tags","tags":null,"title":"Guide"},{"body":"vRealize Automation (vRA) 8.x provides native integration to GitHub.com to share and sync your Blueprints and Action Based Extensibility (ABX) scripts. This integration is provided as a way to edit your blueprints and ABX scripts as Infrastructure as Code (IaC) objects and for vRA to then consume the changes once they are updated and committed to your repository. This integration is not designed as a way to backup or export your content to GitHub. Integration in vRA 8.0 / vRA 8.0.1 is only available to GitHub.com and not GitHub Enterprise Cloud or GitHub Enterprise Self-Hosted.\n Create a GitHub.com Personal Access Token Configure the vRA Portal  Create a GitHub.com Personal Access Token To provide the vRA portal access to your GitHub.com repositories, you must create a Personal Access Token and provide the token to the vRA portal. To create a Personal Access Token, log into your GitHub.com account and navigate to Settings \u0026gt; Developer Settings \u0026gt; Personal access tokens (or click here). Select the Generate new token button and you may be asked to confirm your password again. On the New personal access token page, in the Note field select a meaningful name, such as \u0026quot;vRA 8 Repo Access\u0026quot; and select the permissions you require. For my environment, I have only provided the \u0026quot;Full control of private repositories\u0026quot; checkbox as I require access to my private and public repos.\n    Once selected, click Generate Token and copy the token that is generated and record it somewhere safe. It can not be retrieved later, but can be regenerated if required.\n    GitHub.com Token: a79ac9a10840be26d153d0ecca88a13a69c5094d\nConfigure the vRA Portal To set up this integration, log into the vRA Portal, and select Cloud Assembly \u0026gt; Infrastructure \u0026gt; Connections \u0026gt; Integrations. Select Add Integration \u0026gt; GitHub. The Server URL must remain untouched as https://api.github.com and the Token field should be filled with the Token you just generated. Note that GitHub Enterprise is not supported in vRA 8.0. Validate the credentials, provide a meaningful name and click Add.\n    Once the integration is added, open the integration and navigate to the Projects tab. Select Add Project, select the project you want to integrate with and click Next. Enter the repository details as below but for your own GitHub environment. Note that blueprints and ABX scripts are handled separately so will require setup for both individually. The below is a public repo if you want to test the integration yourself.\nRepository: GaryFlynn/vRA8Samples\nBranch: master\nFolder: blueprints\nType: Blueprints\nRepository: GaryFlynn/vRA8Samples\nBranch: master\nFolder: ABX\nType: Action based scripts\nOnce both have been added, a sync will automatically run and you should see the below.\n    As you can see from the above image, the sync has found 2 ABX actions on my GitHub repo and has synced this to vRA. These ABX scripts are now available for consumption in the Extensibility \u0026gt; Library \u0026gt; Actions view.\n    ","link":"https://garyflynn.com/post/vrealize-automation-8x-setup-github-integration/","section":"post","tags":["GitHub","Guide","Integration","VMware","vRA","vRA 8","vRealize"],"title":"vRealize Automation 8.x - Setup GitHub Integration"},{"body":"","link":"https://garyflynn.com/tags/kerberos/","section":"tags","tags":null,"title":"Kerberos"},{"body":"","link":"https://garyflynn.com/tags/krb5.conf/","section":"tags","tags":null,"title":"krb5.conf"},{"body":"To configure Kerberos authentication with vRealize Orchestrator (vRO), the krb5.conf file must be set up for your specific environment and the domain you are connecting to. The location of the krb5.conf file is different for different versions and deployments of vRO, so the below list shows the locations of the krb5.conf file for vRO 7 vs vRO 8 and standalone deployments vs embedded with vRA deployments.\nIn vRO 7.x standalone, the krb5.conf file is located in /usr/java/jre-vmware/lib/security/krb5.conf\nIn vRO 8.x standalone, the krb5.conf file is located in /data/vco/usr/lib/vco/app-server/conf/krb5.conf\nIn vRO 7.x embedded with vRA, the krb5.conf file is located in /etc/krb5.conf\nIn vRO 8.x embedded with vRA, the krb5.conf file is located in /data/vco/usr/lib/vco/app-server/conf/krb5.conf\nIf you have changed the krb5.conf file, the appliance will need to be restarted for the changes to take effect.\nTo configure Kerberos and the krb5.conf file, follow one of the many blogs online or follow the below example krb5.conf file.\n1[libdefaults] 2default_realm = HOMELAB.LOCAL 3udp_preferences_limit = 1 4[realms] 5HOMELAB.LOCAL = { 6kdc = dc-1.HOMELAB.LOCAL 7default_domain = HOMELAB.LOCAL 8} 9[domain_realm] 10.HOMELAB.LOCAL=HOMELAB.LOCAL 11HOMELAB.LOCAL=HOMELAB.LOCAL VMware documentation is now also available here.\n","link":"https://garyflynn.com/post/vrealize-orchestrator-kerberos-configuration-file/","section":"post","tags":["Homelab","Kerberos","krb5.conf","VMware","vRealize","vRO","vRO 7","vRO 8"],"title":"vRealize Orchestrator - Kerberos Configuration File"},{"body":"","link":"https://garyflynn.com/tags/vro/","section":"tags","tags":null,"title":"vRO"},{"body":"","link":"https://garyflynn.com/tags/vro-7/","section":"tags","tags":null,"title":"vRO 7"},{"body":"","link":"https://garyflynn.com/tags/vro-8/","section":"tags","tags":null,"title":"vRO 8"},{"body":"","link":"https://garyflynn.com/tags/gcp/","section":"tags","tags":null,"title":"GCP"},{"body":"","link":"https://garyflynn.com/tags/google-cloud/","section":"tags","tags":null,"title":"Google Cloud"},{"body":"vRealize Automation 8.x can integrate with several cloud providers, and to do this for your Google Cloud Platform (GCP) environment, select Cloud Assembly \u0026gt; Infrastructure \u0026gt; Connections \u0026gt; Cloud Accounts and create each of the cloud integrations you require. For GCP, there is some preparation we need to do on the GCP Console, so head over to console.cloud.google.com and authenticate with the account which has access to the Project you want to integrate with.\nTo integrate vRA 8.x with GCP, there are a few configurations we need to complete and provide to the vRA portal. These are covered in the sections listed below.\n Project ID Enable the API Service Account vRA Portal Configuration  Project ID To retrieve the project ID, log into the GCP Console and select the appropriate Project. On the Home Dashboard under Project info, copy the Project ID and take note of it to validate it later in the vRA Portal.\n    Enable the API The GCP project you have created for your environment, must have the Compute Engine API enable. Log into the GCP Console and select your project. From the menu, select APIs \u0026amp; Services \u0026gt; Enable APIs and Services. In the Search for APIs \u0026amp; Services box, type Compute Engine API and select the Compute Engine API.\n    Select Enable to enable the API and wait for this to complete as it may take up to a minute.\nService Account To create a service account, log into the GCP Console and ensure that you have selected the correct Project that you are working in. From the menu, select IAM \u0026amp; Admin \u0026gt; Service accounts \u0026gt; Create Service Account.\n    For the new service account, give it a logical name such as such as \u0026quot;svc-vra8\u0026quot; and the Service account ID will be auto-generated, however it can be amended.\nNote A long service account name will fail vRA validation with an error stating incorrect permissions, when the details are entered in the vRA Add Cloud Account page. Save yourself some pain and choose a short and simple account name.\n Give the service account a description, such as \u0026quot;Service account used for connecting GCP to the Homelab vRealize Automation 8.x environment\u0026quot;.\n    Once the account is created, it must me assigned a role so that it will be able to access the resources required for vRA 8.x to operate. There are several roles listed below which the service account requires to enable full functionality with vRA 8.x.\n Compute Engine \u0026gt; Compute Admin Kubernetes Engine \u0026gt; Kubernetes Engine Admin Service Accounts \u0026gt; Service Account User Pub/Sub \u0026gt; Pub/Sub Admin  Once the roles are selected, click Continue.\n    The next step, granting users access to this service account, is optional and is not required but may be relevant based on your organisations policies etc. Once you have reviewed the page to see if it applies, select Create Key.\nSelect the Key type as JSON and select Create.\n    This will create a JSON file and your browser will download the file. Save it somewhere you can retrieve later. Once stored somewhere securely, select Done.\n    vRA Portal Configuration Back in the vRA portal, select Cloud Assembly \u0026gt; Infrastructure \u0026gt; Connections \u0026gt; Cloud Accounts \u0026gt; Add Cloud Account \u0026gt; Google Cloud Platform\n    In the New Cloud Account page, select the Import JSON Key button up the top and navigate to the previously downloaded JSON file. This will then auto-fill the next sections for you. Once this is loaded, confirm it all looks correct and select Validate.\n    Enter a name for the Cloud Account and optionally a description. Under Configuration, select the GCP regions to allow provisioning to, ensure the checkbox is select to create a cloud zone for each of the selected regions, and under Capability tags, enter âcloud:azureâ. This enable us to use tagging in the blueprint request forms to select the appropriate cloud account / endpoint to provision to. Once done, select Add.\n    Once the Cloud Account has been created, under Configure \u0026gt; Cloud Zones, you will see your selected regions each having their own Cloud Zones.\n    In more complex environments, you can Open the Cloud Zone and select the Compute tab, and for each availability zone, assign capability tags. If for example you have separate availability zones for dev, test and prod, you could assign the capability tag âenvironment:devâ to europe-west2-c, âenvironment:testâ to europe-west2-b \u0026amp; âenvironment:prodâ to europe-west2-a, to ensure that different workload environments are placed in different availability zones. The second part of this configuration is done in the blueprint request form.\n    ","link":"https://garyflynn.com/post/vrealize-automation-8x-setup-gcp-cloud-account/","section":"post","tags":["GCP","Getting Started","Google Cloud","Homelab","VMware","vRA","vRealize"],"title":"vRealize Automation 8.x - Setup Google Cloud Platform Cloud Account"},{"body":"","link":"https://garyflynn.com/tags/azure/","section":"tags","tags":null,"title":"Azure"},{"body":"vRealize Automation 8.x can integrate with several cloud providers, and to do this for your Microsoft Azure environment, select Cloud Assembly \u0026gt; Infrastructure \u0026gt; Connections \u0026gt; Cloud Accounts and create each of the cloud integrations you require. For Azure, there is some preparation we need to do on the Azure Portal, so head over to portal.azure.com and authenticate with the account which has access to the Subscription you want to integrate with.\nTo integrate vRA 8.x with Azure, there are 4 main configuration IDs and some permissions need to be set which we need to complete and provide to the vRA portal. These are covered in the sections listed below.\n Subscription ID Tenant ID Client Application ID Client Application Secret Key App Registration Permissions Register Compute Provider to Subscription vRA Portal Configuration  Subscription ID To locate the subscription ID, log into the Azure Portal and ensure you have selected the correct Directory. If you have multiple directories, you can select the correct one from the menu option below.\n    Navigate to Subscriptions where you will see all subscriptions in this directory. Select the subscription you want to integrate with vRA and copy the Subscription ID to a notepad.\n    Notepad Subscription ID: c607c082-45ef-4f15-97f2-937038d67333  Tenant ID To locate the tenant ID, log into the Azure Portal and ensure you are still logged in with the correct directory. From the Azure Portal homepage, search for or select Azure Active Directory. This will load the directory you are currently in and from the overview page we can grab the Tenant ID. Copy this to a notepad along with the previous Subscription ID.\n    Notepad Subscription ID: c607c082-45ef-4f15-97f2-937038d67333\nTenant ID: c73dcac0-7bc9-48be-9985-9f3622452904\n Client Application ID From with the Azure Active Directory interface, under the Manage menu, select App registrations \u0026gt; New registration.\n    Enter a logical name for the application registration, such as \u0026quot;vRealize Automation 8.x Homelab\u0026quot;. For the supported account types, select the option applicable to your environment. For a single directory, the first option will be sufficient, however if your environment has multiple organizational directories, select the second option so that the single app registration can be used across all directories. The redirect URL should be left blank.\n    Once the app is registered, copy the Application (client) ID to your notepad. The Directory (tenant) ID should be the same as we previously retrieved.\n    Notepad Subscription ID: c607c082-45ef-4f15-97f2-937038d67333\nTenant ID: c73dcac0-7bc9-48be-9985-9f3622452904\nClient Application ID: 7e07512b-3db4-4dce-bfc5-5da4c5b260d3\n Client Application Secret Key The Client Application Secret Key is the \u0026quot;password\u0026quot; used by the client application to authenticate to Azure. Think of the Client Application ID as the username and the Client Application Secret Key as the password. To generate the secret key, select your app registration (vRealize Automation 8.x Homelab) and under Manage, select Certificates and Secrets \u0026gt; New client secret.\n    Enter a description for the client secret, such as \u0026quot;vRealize Automation 8.x Homelab Client Secret\u0026quot; and set the expiry per your security policy, followed by Add.\n    Once this is created, copy the Value from the client secret to your notepad. Be very careful, once you perform another operation, or navigate away from this page, the secret key can never be retrieved again. Ensure you have it recorded somewhere safe and backed up!\n    Notepad Subscription ID: c607c082-45ef-4f15-97f2-937038d67333\nTenant ID: c73dcac0-7bc9-48be-9985-9f3622452904\nClient Application ID: 7e07512b-3db4-4dce-bfc5-5da4c5b260d3\nClient Application Secret Key: c6zf/Yr/.y/4VNfy8C9s8jgFYU0JxPq8\n From the menu on the left, select API permissions, Add a permission.\n    From the Select an API screen, select Azure Service Management under Commonly used Microsoft APIs.\n    Select Delegated permissions and tick user_impersonation, followed by Add permissions.\n    App Registration Permissions Now that we have an account to connect to Azure, the next step is to give it the required permissions to the subscription. Navigate back to Subscriptions, select the subscription you are adding to vRA and on the menu, select Access control (IAM).\n    Select Add, Add Role Assignment and select the Role as Contributor. This will give the app registration access to create and manage all resources, except access to resources. For Assign access to, leave this as the default \u0026quot;Azure AD user, group, or service principal\u0026quot;. In the select field, search for the name of your app registration (vRealize Automation 8.x Homelab) and select the correct object. Once selected, ensure the object exists under Selected members and click Save.\n    Register Compute Provider to Subscription The final step to complete in Azure is to navigate to your Subscription in the Azure portal, and on the menu, scroll down and select Settings, Resource providers.\n    In the Filter by name... search box, enter Compute and Register the Microsoft.Compute resource provider.\n    The registration will take a few minutes but will eventually show as Registered. You can refresh the status with the Refresh button.\n    vRA Portal Configuration Back in the vRA portal, select Cloud Assembly \u0026gt; Infrastructure \u0026gt; Connections \u0026gt; Cloud Accounts \u0026gt; Add Cloud Account \u0026gt; Microsoft Azure.\n    In the New Cloud Account page, copy in the four values we obtained from the Azure Portal earlier, and select Validate to confirm the credentials are correct.\n    Enter a name for the Cloud Account and optionally a description. Under Configuration, select the Azure regions to allow provisioning to, ensure the checkbox is selected to create a cloud zone for each of the selected regions, and under Capability tags, enter \u0026quot;cloud:azure\u0026quot;. This enable us to use tagging in the blueprint request forms to select the appropriate cloud account / endpoint to provision to. Once done, select Add.\n    Once the Cloud Account has been created, under Configure \u0026gt; Cloud Zones, you will see your selected regions each having their own Cloud Zones.\n    In more complex environments, you can Open the Cloud Zone and select the Compute tab, and for the region, assign capability tags. If for example you have separate regions for dev, test and prod, you could assign the capability tag âenvironment:devâ to UK West, and \u0026quot;environment:test\u0026quot; \u0026amp; \u0026quot;environment:prod\u0026quot; to UK South, to ensure that dev workloads are placed only in the UK West region, and the rest in UK South. The second part of this configuration is done in the blueprint request form.\n        ","link":"https://garyflynn.com/post/vrealize-automation-8x-setup-azure-cloud-account/","section":"post","tags":["Automation","Azure","Getting Started","Homelab","VMware","vRA","vRealize"],"title":"vRealize Automation 8.x - Setup Azure Cloud Account"},{"body":"vRealize Automation 8.x can integrate with several cloud providers, and to do this for your vSphere environment, select Cloud Assembly \u0026gt; Infrastructure \u0026gt; Connections \u0026gt; Cloud Accounts and create each of the cloud integrations you require. For vSphere, enter the vCenter FQDN / IP address, the credentials to authenticate with and select a logical name. Under capabilities, enter \u0026quot;cloud:vsphere\u0026quot; as this will enable us to use tagging in the blueprint request forms. Validate the credentials and once they are validated, select which datacenters to allow provisioning to, followed by selecting Add.\nTip Make sure the vCenter IP address / FQDN matches the vCenter server certificate or you will receive the error below...\n Error \u0026quot;Unable to validate the provided access credentials: Failed to validate credentials. Error: Failed to connect to vCenter: Your certificate may be untrusted. To trust the certificate validate your account credentials and accept the untrusted certificate.\u0026quot;\n     Once the Cloud Account has been created, under Configure \u0026gt; Cloud Zones, you will see your selected Datacenters each having their own Cloud Zones.\n    In more complex environments, you can Open the Cloud Zone and select the Compute tab, and for each Cluster, assign capability tags. If for example you have separate clusters for dev, test and prod, you could assign the capability tag \u0026quot;environment:dev\u0026quot; to ensure that only dev workloads are placed on this cluster. The second part of this configuration is done in the blueprint request form.\n    ","link":"https://garyflynn.com/post/vrealize-automation-8x-setup-vsphere-cloud-account/","section":"post","tags":["Automation","Getting Started","Homelab","VMware","vRA","vRealize","vSphere"],"title":"vRealize Automation 8.x - Setup vSphere Cloud Account"},{"body":"","link":"https://garyflynn.com/tags/control-center/","section":"tags","tags":null,"title":"Control Center"},{"body":"","link":"https://garyflynn.com/tags/orchestrator/","section":"tags","tags":null,"title":"Orchestrator"},{"body":"In both vRealize Automation and Orchestrator 8.x, the appliances have been rebuilt using a kubernetes architecture. For this reason, the location of the different Orchestrator user interfaces has changed.\nOrchestrator Client UI - https://FQDN_or_IP_address:443/orchestration-ui\nOrchestrator Client Java UI - deprecated from vRO 8.0 onwards\nOrchestrator Control Center UI - https://FQDN_or_IP_address:443/vco-controlcenter\nTo login to the Orchestrator Control Center UI, the username is 'root' and the password is the same as the appliance 'root' password.\n","link":"https://garyflynn.com/post/vrealize-orchestrator-8x-accessing-control-center-ui/","section":"post","tags":["Control Center","Guide","Orchestrator","VMware","vRO","vRO 8"],"title":"vRealize Orchestrator 8.x - Accessing Control Center UI"},{"body":"Today is a significant day for VMware with the announcements coming out primarily around vSphere 7 and the implementation of Project Tanzu. The vSphere client will now natively support running containers and VMs within the same unified console, the vSphere Client. One very interesting new feature is the VMware Lifecycle Manager (vLCM) that will be introduced to simplify the management of firmware, drivers and ESXi bundles. For more information on today's announcements, check out the blog here. But what about the vRealize Suite announcements? That's what we are really interested in!\nvRealize Suite Lifecycle Manager 8.1 (vRSLCM) The full blog is available here, but a few key things of note are below.\n Multi-Tenancy Support - vRSLCM will now enable you to manage vRA tenant organisations GitHub Integration - Enable content sharing and version control with your GitHub environment  vRealize Automation 8.1 (vRA) The full blog is available here, but a few key things that have got me excited are below.\n Custom Resources - Any object can once again be created as a custom resource, similar to vRA 7.x Custom Day 2 Actions - The ability to run custom day 2 actions on objects returns and is similar to vRA 7.x and can be further enhanced with policies. Launch Pipelines from Service Catalog - Previously Service Broker could only present catalog items which were a Cloud Assembly blueprint, AWS CloudFormation template, vRO workflow or ABX action. This integration will enable Code Stream pipelines to be called directly from the Service Broker UI. vSphere 7 Support - Kind of an obvious one, but vRA 8.1 will support vSphere 7.0 including the ability to create and manage Kubernetes supervisor clusters and namespaces. PowerShell Support for ABX Actions - Probably my favourite new feature, in addition to the node.js and Python support, you can now create ABX actions directly with PowerShell code. This will hopefully enable many more organisations to start benefiting from the serverless functionality provided by ABX.  vRealize Orchestrator 8.1 (vRO) The full blog is available here, but a few key things to note are below.\n Tree View returns!!! - Okay, maybe I am a little too excited by this, but vRO 8.0 was effectively unusable with the new HTML5 client without this. Can't wait to explore the new HTML5 UI now! Run and Debug Workflow Elements - Instead of having to Run or Debug an entire workflow, you will now be able to test each element of the workflow. For anyone that has created large, complex workflows, this will be a welcome surprise. It will be interesting to see how this integrates with workflow input values though, if you're only running one element, but that element requires an input from the workflow. Let's wait and see. New scripting languages - This is huge! For anyone that has invested time in vRO, you would have been frustrated at one point in time with only having JavaScript as the language of workflows (and an old version at that). With this release, additional scripting languages of node.js, Python and PowerShell have been added, matching the support provided for vRA 8.1 ABX actions.  vRealize Operations Manager 8.1 (vROps) Another big release, and the full blog is available here, but a few key things to note are below.\n vSphere 7.0 SupportÂ â Another obvious one, but all of the vSphere 7.0 new constructs will be supported in vROps 8.1, including managing containers, viewing container topology and the usual KPIâs, dashboards, capacity planning etc. Public Clouds - VMware on AWS can now be natively managed through vROps 8.1 along with NSX-T support and an integration has been added for Google Cloud Platform which was missing in the 8.0 release. This is in addition to the existing Microsoft Azure integration. Integration with Slack - Native integration with Slack has been requested by several customers and this will provide a great way for keeping up to date with your vROps alerts. Support for vVols - Arguably one of the most under-utilised VMware products, vROps will be able to collect metrics and report on vVols the same as all other objects. Network Aware Monitoring - Last but not least, vROps is finally integration with vRealize Network Insight (vRNI) to provide network aware troubleshooting. It will be interesting to see how this comes together.  Well, that's it. I hope this post was helpful and the new features will help you deliver value to your business.\n","link":"https://garyflynn.com/post/vrealize-suite-announcement-march-2020/","section":"post","tags":["VMware","vRA","vRealize","vRO","vROps","vRSLCM","vSphere"],"title":"vRealize Suite Announcement - March 2020"},{"body":"","link":"https://garyflynn.com/tags/vrops/","section":"tags","tags":null,"title":"vROps"},{"body":"","link":"https://garyflynn.com/tags/comparison/","section":"tags","tags":null,"title":"Comparison"},{"body":"VMware has recently released vRealize Automation 8.0 and with this comes a complete redesign of the vRealize Automation product. Are you just starting out on your Cloud Management Platform (CMP) journey and not quite sure which version to deploy? Hopefully this blog will help you understand some of the key differences between vRA 7.x and vRA 8.x and some familiar features which are missing from vRA 8.x.\nThe first place to start is by reading this excellent blog post by Chip Zoller (daphnissov) on the VMware Community Forums. This vRA 8 FAQ provides plenty of answers to some of the obvious questions.\nvRA 7.x Pros \u0026amp; Cons  PRO - Very mature and proven product PRO - Well documented / blogged by VMware customers CON - Slower deployment time CON - Higher resource requirements (SQL/Windows IaaS) CON - Requires Windows licenses CON - Requires a rework to migrate to vRA 8.x  vRA 8.x Pros \u0026amp; Cons  PRO - Streamlined deployment process with Easy Installer PRO - Less resource requirements (No SQL/Windows IaaS) PRO - Centralised architecture using single appliance / cluster PRO - No rework required PRO - Infrastructure as Code CON - vRA 8.0 is essentially a version 1.0 product, potentially lots of bugs CON - Not well documented / blogged by VMware customers CON - Missing Features  Missing Features This is probably the biggest sticking point for many customers â âFeature X is missing from vRA 8.0 so I canât deploy itâ. Admittedly, vRA 8.0 does have some features missing such as approval policies, multi-tenancy, granular role based access and the property dictionary.\nApproval Policies - Although approval policies are missing from vRA 8.0 and many customers on vRA 7.x are using them, the same customers also use tools such as ServiceNow, where vRA can leverage the ServiceNow capabilities for the approval policies, with vRA 8.0 then taking over the deployment once ServiceNow has completed the approval workflow. I have not heard anything hinted that this may return in vRA 8.1, so for now there are simply no approval policies in vRA 8.\nMulti-Tenancy - Unfortunately multi-tenancy is not available in vRA 8.0. It has been hinted at several public VMware events and VMUG events that vRA 8.1 will likely be released with multi-tenancy, but we still don't know what this will look like or if it will provide the same separation as version 7.x did. For now, if you require multi-tenancy, vRA 7.6 or waiting for vRA 8.x are your only options.\nProperty Dictionary - The property dictionary which was utilised extensively by customers in vRA 7.x is gone from vRA 8.0. Never fear though, there is a replacement! Almost all vRA components now have a generic key-value pair for tagging different components. VMware provides some good documentation on Tags and how best to use them, so have a good read of the documentation here.\nAnsible - With vRA 7.x, Ansible Tower was supported. However, vRA 8.0 only supports Ansible (Open Source) and not Ansible Tower currently.\nUnsupported Endpoints - vRA 8.0 does not support several endpoints. The full list is available here and this includes vCloud Director, Hyper-V and VCH.\nvCAC CAFE and IaaS EndpointsÂ - Due to the change in architecture of the vRealize Automation appliance, the vCAC CAFE and IaaS endpoints are no longer available. Any workflows that call these endpoints will need to be re-written.\nSoftware ComponentsÂ - Software components from vRA 7.x are completely gone from vRA 8.0 and the guest user agent (gugent) is partly replaced with cloud-init for Linux and cloudbase-init for Windows. Although not all functionality is available with cloud-init / cloudbase-init, I am hoping that Software Components will return in some form in the future. For now, it may be best to rely on a third-party software installer tool.\nResource QuotasÂ - In vRA 8.0 Cloud Zones can be configured to limit provisioning based on the number of instances and a limit set on the amount memory. The traditional reservations however are not available and I am hoping that these will return to vRA 8.x at some point in the future.\nXaaS workflowsÂ - Running a vRO workflow as a catalog item and creating a custom form is available in vRA 8.0!! Too many people have mentioned that XaaS is not available. Basic XaaS is and this is what the majority of the environments I have seen are using XaaS for. Note, the catalog item cannot be presented in a blueprint as a component, however it can be presented as a standalone catalog item.\nCustom Actions / Day 2 Actions - Custom actions on standard object types (ie. Virtual Machine) are not available in vRA 8.0 currently. I am hoping this will change soon as many customers utilise this feature. In vRA 8.0 (and 7.x for that matter), this can be worked around by placing the custom action / day 2 action in a vRO wrapper workflow, and presented as a catalog item. I have seen environments where clients prefer to use day 2 actions this way anyway so it can be easily worked around.\nCustom ResourcesÂ - The concept of a XaaS workflow running and creating a vRA customer resource, such as an AD User Group is not available in vRA 8.0. Although this isn't a very common use case for vRA, it is certainly used in environments and I hope that it returns to vRA 8.x.\nVMware Support VMware has confirmed that vRA 7.6 will be supported until 11th April, 2022 which is over 2 years after the version 8.0 product was released. VMware seems to be happy supporting version 7.6 for a while longer yet, as they understand that customers will need time to migrate from 7.x to 8.x. The details below are correct at time of publishing (November 30th, 2019).\n   Feature vRA 7.4 vRA 7.5 vRA 7.6 vRA 8.0     End of General Support 17th Dec 2020 17th Dec 2020 11th Apr 2022 17th Oct 2021   Support Length 2 Years 2 Years 3 Years 3 Years   Upgrade to 8.x? No Yes Yes Yes    Migration Assessment Shipping with vRA 8.0 is the \u0026quot;vRA 7 Migration Assessment\u0026quot; and although this does not allow you to upgrade from 7.x to 8.x, it will analyse your vRA and vRO instances and find potential problems. Issues such as blueprints with software components and vRO code referencing the vCAC Cafe or IaaS objects will all be highlighted. Each component will be analysed and it will provide a status for each object as either Ready, Ready with Warnings or Not Ready, along with a description. I am sure this migration assessment will be upgraded for vRA 8.1 to match any new features, but it is a good idea to run it now to get an idea of how compatible your environment might be. More information is available here.\nFinal Thoughts So after all of that, what should I go with? The answer for me is vRA 8.0. Although some features aren't available today, 95% of my use cases can be met and not having to re-factor or re-work workflows when eventually migrating from vRA 7.x to vRA 8.x, will result in less work in the long run and provide the end users with a consistent experience into the future. If you want to stay up to date with all things vRA, grab a subscription to vRealize Automation Cloud as VMware has confirmed that this is where all new features will be released first and they will then make there way into vRA.\n","link":"https://garyflynn.com/post/which-version-of-vra-to-deploy/","section":"post","tags":["Automation","Comparison","Guide","VMware","vRA","vRealize"],"title":"vRA 7.x vs vRA 8.x - Which Version to Deploy?"},{"body":"","link":"https://garyflynn.com/tags/troubleshoot/","section":"tags","tags":null,"title":"Troubleshoot"},{"body":"With the introduction of vRealize Automation (vRA) 8.0, the traditional appliance VAMI page is gone. This is replaced with the vRA CLI and the kubernetes command line tools. This post will show some of the more common CLI commands you may need. To use all of the commands below, use SSH to connect to the appliance and log in with the root username and password.\n Check Pods / 'Services' Status Display vRA Cluster Status Verify the vRA Deployment Status Check Deployment Log File Generate a Log Bundle Stopping / Shut down vRA Cluster Starting vRA Cluster vRA 8.x Error - Bad Gateway vRA just not working... Remove VM from Inventory without deleting the VM Remove vRA integration with vRealize Log Insight  Check Pods / 'Services' Status Although the traditional vRA services are replaced with kubernetes containers, you can still check the running status of them using the command below. This command will show the running status, the age and the number of restarts for each pod or 'service'.\n1kubectl -n prelude get pods Display vRA Cluster Status 1vracli status Verify the vRA Deployment Status The output of this command will be \u0026quot;Deployment not complete\u0026quot; if the appliance is still deploying / starting up, otherwise it will show as \u0026quot;Deployment complete\u0026quot;.\n1vracli status deploy Check Deployment Log File The deployment log file is located at the below location\n1tail -f /var/log/deploy.log Generate a Log Bundle The command below will generate a log bundle and the output file can be found at \\root\\log-bundle-xxxxxxxxx.tar.xz. For my environment, the log bundle took around 20 minutes to complete and was 60MB in size, however HA environments are likely to take longer and be significantly larger. The --collector-timeout flag can be used to set a timeout for each log collection (default 1000 seconds). The --include-cold-storage may be requested by GSS if the issue you are troubleshooting was not recent as it will include older log files in the log-bundle, however collection will be slower and the output file will be larger.\n1vracli log-bundle Stopping / Shut down vRA Cluster This command will shutdown vRealize Automation on all of the cluster nodes by stopping the services, sleep for 2 minutes and clean the current deployment before shutting down the appliance. Check the official docs here for up-to-date procedures.\n1/opt/scripts/svc-stop.sh 2sleep 120 3/opt/scripts/deploy.sh --onlyClean 4shutdown -h now Starting vRA Cluster Power on each of the appliances and wait for them to boot completely before proceeding. Wait for the appliance console to show the blue welcome page. Ensure that all prerequisite servers are also started such as vRealize Identity Manager (vIDM). This command will run the deploy.sh script to deploy all prelude services and then the kubectl command will show the status of all the running pods or 'services'. This process can take 20+ minutes. If the appliance has insufficient memory, the timeout will occur at 30 minutes. Check the official docs here for up-to-date procedures.\n1/opt/scripts/deploy.sh 2kubectl -n prelude get pods vRA 8.x Error - Bad Gateway After starting up your vRA appliances, you may find that the UI loads but shows an error of Bad Gateway. This is usually because the appliance is still starting up. Presuming the appliance has enough resources assigned to it, the UI will eventually load and as per above, the status of the deployment can be checked using the below command. Check the READY column and confirm that all pods are ready for use. Any pod with a READY value of 0/1 means that the pod is not available yet. Once all pods are listed as 1/1 or 2/2 then the UI will be available for use.\n1kubectl -n prelude get pods vRA just not working... After trying all of the above, sometimes vRA just won't come back online after a failure. If this is the case, run the command above to check the status of the pods and if they are all online except the postgres database pod, try the below command to restart the kubelet service. Once this is run, let it sit for the next 30 minutes as vRA will restart itself and try to come back online cleanly.\n1systemctl restart kubelet Remove VM from Inventory without deleting the VM Whilst this is 100% not supported, vautomation.dev provides a very useful article on how to remove VMs from inventory without deleting the underlying VM by accessing the internal vRA database.\nRemove vRA integration with vRealize Log Insight Run the below command to remove the integration between vRA and vRLI in addition to removing the configuration from the vRLI interface.\n1vracli vrli unset To add the integration back again, run the command below and substitute vrli8.homelab.local with the FQDN or URL of your vRLI instance.\n1vracli vrli set vrli8.homelab.local ","link":"https://garyflynn.com/post/vrealize-automation-8x-troubleshooting/","section":"post","tags":["Automation","Troubleshoot","VMware","vRA","vRealize"],"title":"vRealize Automation 8.x - Troubleshooting"},{"body":"Once vRealize Automation 7.x is deployed, you must manually start the vRealize Orchestrator Configurator service to access the Configuration interface.\nTo do this, log into the vRealize Automation appliance by SSH using PuTTY (or your preferred Secure Shell client).\n    Run this command to verify that the service is set to automatically start.\n1chkconfig vco-configurator If the service reports \u0026quot;off\u0026quot;, run this command to enable an automatic restart of the vRealize Orchestrator Configurator service when the vRealize Automation appliance is rebooted in future.\n1chkconfig vco-configurator on You can verify the status of the vRealize Orchestrator Configurator service by running this command. The service should now report \u0026quot;on\u0026quot;.\n1service vco-configurator status To start the vRealize Automation Configurator service immediately (instead of waiting for a reboot), run this command.\n1service vco-configurator start Once the service is started successfully, you can access the configurator service at the url below and log in using the root username and password.\nhttps://_{fqdn or ip address of vRA appliance}_:8283/vco-controlcenter/\nIf you are running multiple vRealize Automation appliances, ensure you run this process on all appliances in the cluster.\n","link":"https://garyflynn.com/post/start-the-vrealize-orchestrator-configurator-service/","section":"post","tags":["Configure","Homelab","VMware","VMware","vRO"],"title":"Start the vRealize Orchestrator Configurator Service"},{"body":"","link":"https://garyflynn.com/tags/services/","section":"tags","tags":null,"title":"Services"},{"body":"In the previousÂ postÂ we configured vRA 8.0 with a vSphere endpoint and in this post we are going to cover the different Services which are available. vRA 8.0 has four main components or services, Cloud Assembly, Service Broker, Code Stream and Orchestrator. Great, but what is the role of each service?\n    Cloud Assembly The Cloud Assembly service is the multi-cloud provisioning service and is where the bulk of your time will be spent. The Cloud Assembly service is where you can create your SDDC private cloud and it is also an abstraction layer across multiple clouds. This abstraction allows you to create blueprints which can be used to deploy applications across different cloud providers, mapping the cloud constructs of one public cloud provider with another. All of the usual features are there including viewing your existing deployments, creating blueprints and configuring Infrastructure. The addition of the \u0026quot;Guided Setup\u0026quot; on the right hand side helps with understanding how all of the terminology fits everything together. The Infrastructure tab in Cloud Assembly is where most of the configuration is done. Here you can create the different projects, cloud zones, flavour and image mappings and network and storage profiles. The infrastructure tab is also where the cloud accounts are defined and the compute, network, security, storage etc are all deployed, along with the Kubernetes integration. The table below maps the vRA 7.x constructs to the vRA 8.x constructs.\n   vRA 8.x Construct vRA 7.x Construct Description     Project Tenant\nBusiness Group The simplified construct used to group users with blueprints, templates and other content.   Cloud Account Infrastructure Endpoint The construct used to connect to infrastructure such as AWS, Azure, GCP, NSX-T, NSX-V, VMware Cloud on AWS and vCenter.   Cloud Zone Compute Resource\nReservation The construct used to map infrastructure such as vSphere endpoints, public cloud accounts and placement policies.   Integrations Endpoints This is where other products are integrated such as Active Directory, Ansible, VMware PKS, GitHub, GitLab, IPAM, Puppet, vRO and vROps.    The final sections in Cloud Assembly are the Extensibility and Marketplace tabs. The Marketplace tab enables you to easily download blueprints and images while the extensibility tab is where all of the custom workflows and actions are completed. The extensibility tab combines the power of the vRA 7.x Event Based Subscriptions (EBS) along with several new features including lightweight node.js and python scripts instead of entire vRO workflows.\nService Broker The Service Broker service is the storefront presented to users to consume catalog items along with providing governance around the usage of templates and services through policy definition and configuration. The Catalog tab shows the catalog items you are entitled to. The Deployments tab shows the existing deployments which you have access to and you can provision day-2 resources. The Content \u0026amp; Policies tab is where Blueprints are imported from vRO and Custom Forms can be created, along with Lease Policies. The final tab, Infrastructure, is another location where Projects, Cloud Zones, Cloud Accounts and other Integrations are created, the same as in Cloud Assembly. One feature to note that is missing is Approval Policies. They do not exist in 8.0 but hopefully they will make a return soon!\nCode Stream The Code Stream service brings the productivity gains of DevOps as it is a continuous delivery (CD) service. It includes continuous integration (CI) plugins for common development tools such as Git, Jenkins and Bamboo along with orchestration systems such as Kubernetes and vRO. Code Stream automates the deployments created in Cloud Assembly through various stages and environments from Development to Production. The new Code Stream service provides most of the functionality of the 7.x Code Stream product but has been rewritten for vRA 8.0.\nOrchestrator The Orchestrator service is the orchestration engine behind vRA and the extensibility features and with the 8.0 release comes the removal of the traditional java client. All functionality is now available in the HTML 5 client along with some great new features including end-to-end git integration.\nvRA Migration Assessment This is the service to help customers migrate from vRealize Automation 7.x to 8.x and I will cover this process in a separate blog post soon.\nRead before Upgrading! My final thoughts for vRA 8.0 are that it is a fantastic release to bring parity between the Cloud and On-Prem versions of vRealize Automation. However, given the product has been completely written from scratch, this release should be treated as a 1.0 release in terms of maturity. Many of the features you expect from vRA 7.x are not there (like software components, approval policies etc.) and they may not be in 8.x for some time. Have a really good read of the Release Notes, the Considerations About Migrating to vRealize Automation 8.0 document and also this blog posted on the VMware Communities page.\n","link":"https://garyflynn.com/post/vrealize-automation-8x-services/","section":"post","tags":["Automation","Homelab","Services","VMware","VMware","vRA","vRealize"],"title":"vRealize Automation 8.x - Services"},{"body":"In the previousÂ postÂ we deployed all of the vRealize Suite products and we are now ready to log into vRA and configure it for use. vRA 8.0 is a fundamental change from 7.x and it now consists of four main components, Cloud Assembly, Service Broker, Code Stream and Orchestrator. Let's get vRA 8.0 configured! Load up the vRA homepage https://\u0026lt;vRA FDQN\u0026gt;/ where you are greeted with the welcome page. One thing to note is that the new vRA 8.0 appliance does not contain a VAMI, instead non-UI configuration is done using the \u0026quot;vracli\u0026quot; commands on the appliance shell.\n    Log in using the vIDM configuration user created earlier \u0026quot;configadmin\u0026quot; where you are greeted with the vRA Portal. Select the \u0026quot;Launch Quickstart\u0026quot; button to create a sample blueprint, assign it to a service and publish it to the catalog based off a vSphere Template which you select.\nEnter your vCenter FQDN / IP address along with the username and password with appropriate permissions. Validate the credentials, select the Datacenter where provisioning is allowed, and select \u0026quot;Create and go to next step\u0026quot;.\n    Optionally configure your NSX-V / NSX-T environment with FDQN / IP address, username and password, validate the credentials and select \u0026quot;Create and go to next step\u0026quot;.\n    The Basic Configuration section is where you select a vCenter template, and the quickstart wizard will create your first blueprint, release it to a catalog and then deploy it for the first time. Select the vCenter template, datastore and network before choosing between DHCP and Static IP. If choosing Static IP, provide details of the network IP range, default gateway, DNS servers and optionally a Customization Spec to use. Select Save and Next Step.\n        Governance Policies are critical for any environment and this is where you select the Default Lease duration along with the machine naming standard. By default, the lease will be 1 week and we will keep this as is. Select Edit next to the Machine Name and change the Machine Name Prefix from Requestor Name - 001 to Project Name - 001, then select Next Step.\n    Confirm the Summary page looks correct and optionally disable the \u0026quot;Automatically deploy my template when Quickstart completes\u0026quot; option along with optionally disabling the \u0026quot;Add sample NSX-V blueprints to the catalog\u0026quot;. Now run the Quickstart!\n    Once the wizard is complete, verify everything is successful before closing the wizard and moving on. Congratulations, you have the basic vRA 8.0 constructs in place now for your existing vSphere template. The page will redirect you back to the vRA Services page. Check out the next post to learn about the different Services.\n        ","link":"https://garyflynn.com/post/vrealize-automation-8x-getting-started/","section":"post","tags":["Automation","Getting Started","Homelab","VMware","VMware","vRA","vRealize"],"title":"vRealize Automation 8.x - Getting Started (Quickstart)"},{"body":"","link":"https://garyflynn.com/tags/log-insight/","section":"tags","tags":null,"title":"Log Insight"},{"body":"In the previous post we deployed all of the vRealize Suite products and we are now ready to log into vRLI and configure it for use. vRLI 8.0 has some significant improvements including Unlimited Exports of data (increased from 20,000 events), Content Pack Updates and a new OS in the form of Photon OS. For more information check out the VMware blog post here which includes details of how the single upgrade file will also move the OS from SUSE to Photon! Very impressive!\nNavigate to https:/// and you will see two authentication sources configured. You can log in using the default \u0026quot;admin\u0026quot; account using the \u0026quot;Default (built-in)\u0026quot; authentication source, or the configuration user we created in the Easy Installer which was \u0026quot;configadmin\u0026quot; and select the \u0026quot;VMware Identity Manager\u0026quot; authentication source.\n    Once logged in your are greeted with the \u0026quot;Ready to Ingest Data\u0026quot; welcome screen. Select \u0026quot;Configure vSphere Integration\u0026quot; and enter the FDQN / IP address of your vCenter server, along with the credentials. Select Test Connection and Save once it is successful.\nOn the left menu, select Integration \u0026gt; vRealize Operations and enter the FQDN / IP address of the vROps server, along with the username and password. Select test, then save once successful. Once the integration is complete, you will now be able to view logs directly from the vROps 8.0 UI.\nAnd, well, that's it. vRLI 8.0 is set up, it is configured with vCenter and vROps and it is ingesting data for your environment. To deploy the agents to your VMs, follow the VMware documentation here.\n","link":"https://garyflynn.com/post/vrealize-log-insight-8x-getting-started/","section":"post","tags":["Getting Started","Homelab","Log Insight","VMware","VMware","vRealize","vRLI"],"title":"vRealize Log Insight 8.x - Getting Started"},{"body":"","link":"https://garyflynn.com/tags/vrli/","section":"tags","tags":null,"title":"vRLI"},{"body":"In the previous post we went over the vRSLCM configuration and now we are ready to deploy the vRealize Suite of products. Before we start, I can not stress this enough... Read the release notes!! There are countless changes to each of the products and vRA 8.0 especially is missing some features which may return in vRA 8.1 or later.\n vRealize Suite Lifecycle Manager 8.0 - Release Notes vRealize Automation 8.0 - Release Notes vRealize Log Insight 8.0 - Release Notes vRealize Operations Manager 8.0 - Release Notes vRealize Orchestrator 8.0 - Release Notes  vRealize Suite 2019 Deployment If this environment is just your homelab, you can leverage the default datacenter otherwise it is best to create a new datacenter. To create a Datacenter, log into vRSLCM and select Lifecycle Operations \u0026gt; Datacenters on the left, then Add Datacenter. Enter a name along with the location and click Save. Add a vCenter Server to your new datacenter and Save. You should now see two datacenters. One called \u0026quot;default_datacenter\u0026quot; located in Palo Alto, California, US which contains the vIDM installation, and another new one for your new deployment. In vRSLCM 8.0.1 you can now edit the location of the default datacenter to match your actual location.\n    Select Create Environment on the left menu and enter the details required for your new vRA Installation. An environment name, email, default password and datacenter. Ensure you select you newly created datacenter.\n    Select the products you wish to deploy in this environment along with the version numbers and deployment type. For this example, I am deploying vRA, vRLI and vROps.\n    Accept the EULA, enter your licenses, and validate the association. Click the + icon and Add Certificate. Enter the details to create your certificate for your environment. As per the vRA 8.0 Release Notes, only public DNS suffix are supported for wildcard certificates. So if your domain name is *.local then the deployment will fail. In this situation, use the host names in the Server Domain / Hostname section as per below, instead of a wildcard. If you are running vRA 8.0.1, this issue is resolved.\n    Enter the infrastructure details such as the vCenter server, cluster, network, datastore and disk mode.\n    Enter the Network details which are common across all appliances such as default gateway, netmask, domain name, domain search path, DNS servers, time sync mode and NTP servers, where you can select your previously added DNS and NTP servers using Edit Selection.\n    On the Products tab, select each of the products you are installing and enter the Product Properties, along with the VM specific details such as VM name and IP address etc.\n            Run the Precheck to confirm everything looks okay and once you get the green light, export the configuration so you have a backup and click Submit!\n    Issue 1 - vRA Appliance Failed to Power On The initial deployment failed with an error stating that the vRA 8.0 appliance could not be powered on... A quick check in vCenter confirms it is deployed with 8 vCPU however my Intel NUCs only allow up to 4 vCPU. A quick edit of the VM Settings in vCenter and then logging in to the vRSLCM UI, select \u0026quot;Lifecycle Operations\u0026quot; and expand the navigation bar on the left, and select Requests. Here you will see your Failed request called \u0026quot;vRealize Automation - Create Environment Request\u0026quot;. Select the request and press the Retry button to continue with the installation.\n    Issue 2 - vRA Deployment Failed at Stage \u0026quot;vravainitializecluster\u0026quot; - \u0026quot;VraVaInitialize\u0026quot; Due to the resource constraints in my homelab, I initially reduced the hardware of the vRA appliance to 2 vCPU and 16 GB RAM however the deployment kept failing. Checking the /var/log/deploy.log file showed that the \u0026quot;identity-service\u0026quot; failed upgrading (despite it being a fresh install). Restarting the appliance and trying several other things didn't work... Next step was to power off the appliance, adjust the VM Settings to 4 vCPU \u0026amp; 24 GB RAM, power the VM back on, and retry the installation. This time, success! Looks like the installation was failing due to a timeout and the extra resources were enough for the installer to succeed!\nAll done!     While everything is deploying, go take a rest! You deserve it. Deployments can take a while in homelab environments especially, with the vRA appliance deployment and cluster initialize steps and the vROps cluster initializing taking the most time.\nAnd, well, that's it! vRA 8.0, vRLI 8.0 and vROps 8.0 are deployed! If you have ever installed vRA before, that is by far the simplest vRA deployment ever!!!\nNavigate to https://\u0026lt;vRA FQDN\u0026gt;/ where you are greeted with the new welcome page.\n    Navigate to https://\u0026lt;vROps FQDN\u0026gt;/ where you are greeted with the new vROps robot man.\n    Navigate to https://\u0026lt;vRLI FQDN\u0026gt;/ where you are greeted with the familiar vRLI login screen.\n    ","link":"https://garyflynn.com/post/vrealize-suite-2019-deploy-using-vrslcm/","section":"post","tags":["Homelab","Install","Lifecycle Manager","VMware","vRA","vRSLCM"],"title":"vRealize Suite 2019 - Deploy using vRSLCM"},{"body":"In the previous post we went over the vRSLCM Easy Installer which deployed vRSLCM 8.0 and vIDM 8.0. The installations went smoothly with no reported issues.\nLet's log into the vRSLCM UI by navigating to https://\u0026lt;vRSLCM FQDN or IP\u0026gt;/ and log in with the username \u0026quot;admin@local\u0026quot; and the password you set in the deployment in the previous steps. Note the default username has changed from previous versions and is no longer admin@localhost. Don't get caught out trying to log in with the wrong username!\n    Initial vRSLCM Configuration Before we deploy vRA, let's run through the basic vRSLCM configuration so that everything is in place. Navigate to Lifecycle Operations \u0026gt; Settings.\n    If your vRSLCM appliance doesn't have direct internet access, enter your Select My VMware and add your My VMware Account here. Select NTP Servers and enter each of your NTP Servers (recommended two at a minimum). Then do the same for DNS. Once done, select Time settings \u0026gt; Use Time Server (NTP) and Edit Server Selection ensuring you select your recently added NTP servers before selecting Save.\n    With vRSLCM configuration done, we can now import the OVA files into vRSLCM so it can deploy all of the products. To do this, select Lifecycle Operations \u0026gt; Settings \u0026gt; Product Mapping \u0026gt; Add Binaries. If you already have the OVAs on an NFS share you can map to that share, otherwise the easiest way is to use your My VMware account. Select My VMware, then Discover and once this completes, select the products you need. This can include the upgrade or install option. For this deployment, I need vRLI 8.0 install and vROps 8.0 install. You can use the filter symbols to filter for just the 'install' files. Select Add and vRSLCM will download the product binaries.\n    Once the downloads are complete, we are ready to deploy the vRealize Suite 2019. Follow the next post for more details.\n","link":"https://garyflynn.com/post/vrealize-suite-lifecycle-manager-8-0-configuration/","section":"post","tags":["Homelab","Install","Lifecycle Manager","VMware","vRA","vRSLCM"],"title":"vRealize Suite Lifecycle Manager 8.0 Configuration"},{"body":"","link":"https://garyflynn.com/tags/vidm/","section":"tags","tags":null,"title":"vIDM"},{"body":"VMware has just announced the latest release of the vRealize Suite (2019) and with it comes vRealize Automation 8.0 (vRA), vRealize Log Insight 8.0 (vRLI), vRealize Operations Manager 8.0 (vROps) and vRealize Suite Lifecycle Manager 8.0 (vRSLCM). Noticeably absent is vRealize Business for Cloud (vRBC), as this product has been deprecated and the functionality has been migrated to vROps.\n Announcing General Availability of vRealize Suite 2019, vCloud Suite 2019, and vCloud Suite 2019 Platinum! vRealize Suite Lifecycle Manager 8.0 â Whatâs New Announcing General Availability of VMware vRealize Automation 8.0 Whatâs new in vRealize Log Insight 8.0 Whatâs New in vRealize Operations 8.0? Everything you need to know about the vRealize Operations 8.0 release  So with the exciting announcements out of the way, let's get these installed!\nvRealize Suite Lifecycle Manager Installation The first part of deployment is done with the new \u0026quot;vRealize Easy Installer\u0026quot; which is downloaded from the vRSLCM download page here. This is a huge download because it contains the installers for vRLSCM, vRA and VMware Identity Manager (vIDM). Extract the ISO and run the vrlcm-ui-installer\\win32\\installer.exe file where you will be greeted with the Install and Migrate options.\n    Migrate Option The migrate option is if you have an existing vRSLCM environment you wish to keep and the wizard will migrate all of the below data, but it will not migrate your Content data. The migrate option supports migrating from vRSLCM 1.3, 2.0 and 2.1, while versions prior to 1.3 should migrate to 1.3 first.\n Datacenters and vCenters All existing environments DNS, SNMP, NTP, myVMware, proxy details Migration of vIDM installation/import Blackstone Content endpoints  Install Option The install option is the single pane of glass installer for vRealize Automation, vRealize Suite Lifecycle Manager and VMware Identity Manager.\n    On the next page, Accept the EULA and (optionally) enable the CEIP.\nOn the 'Appliance Deployment Target' page, enter the deployment target of either the vCenter Server IP or an ESXi host IP address along with the appropriate credentials. Select next and accept the target certificate if it's correct. Select the target location, compute resource, storage location, network configuration and enter a default password. On the 'Lifecycle Manager Configuration' page enter the VM name, IP address and hostname.\n    A key difference to the vRealize Suite 2019 compared to 2018, is that all of the products now integrate with VMware Identity Manager!! A huge benefit and the next step in the Easy Installer. If you have an existing vIDM instance, enter the details to import it, otherwise provide the details of a new vIDM instance and the installer will deploy and integrate it for you. This step can't be skipped as the vIDM integration is mandatory. Enter a Default Configuration Admin user and this user will be created automatically and used while integrating other products with vIDM.\n    On the 'vRealize Automation Configuration' page, optionally enter the details to deploy vRA 8.0. If you deploying as a PoC or demo environment, this option is perfectely okay, however it will deploy the datacenter and environment in vRSLCM automatically and some of the configurations can't be altered, so I found it best to deploy it later and skip it now. If you wish to deploy vRA using custom certificates, select 'Skip vRealize Automation installation' and deploy it using the vRSLCM UI.\n    On the Summary, verify your configuration and select Submit. Once the installation process is initialized, the Easy Installer will install vRSLCM 8.0, vIDM 8.0 and optionally vRA 8.0.\n    All done!!!\n    Once the deployment is complete, we are ready to take a look around the vRealize Suite Lifecycle Manager appliance which has been deployed. Follow the next post for more details.\n","link":"https://garyflynn.com/post/vrealize-suite-2019-easy-installer/","section":"post","tags":["Homelab","Install","vIDM","VMware","vRA","vRLI","vROps","vRSLCM"],"title":"vRealize Suite 2019 - Easy Installer"},{"body":"","link":"https://garyflynn.com/tags/alarms/","section":"tags","tags":null,"title":"Alarms"},{"body":"","link":"https://garyflynn.com/tags/alerts/","section":"tags","tags":null,"title":"Alerts"},{"body":"","link":"https://garyflynn.com/tags/dashboard/","section":"tags","tags":null,"title":"Dashboard"},{"body":"vRealize Operations Manager (vROps) stores all symptoms and alerts in an internal database where they are called Alerts and Alarms. To understand how the internal alerts and alarms correlate to symptoms and alerts, have a read of the excellent explanation by James Gill of VirtualCloudIT (https://virtualcloudit.net/2017/06/08/270/).\nOnce you understand the terminology of alerts and alarms, how can we ensure that our environment doesn't breach the recommended values for each? Well thankfully, vROps collects these metrics automatically, so we can create a dashboard to display the information needed.\nThe instructions and files required are available from GitHub and code.vmware.com. Simply follow the instructions to import the necessary Views and the Dashboard to generate the below dashboard.\n\n","link":"https://garyflynn.com/post/vrops-alerts-and-alarms-count/","section":"post","tags":["Alarms","Alerts","Dashboard","VMware","vROps"],"title":"vROps - Alerts and Alarms Count"},{"body":"","link":"https://garyflynn.com/tags/dfw/","section":"tags","tags":null,"title":"DFW"},{"body":"","link":"https://garyflynn.com/tags/export/","section":"tags","tags":null,"title":"Export"},{"body":"Many organisations are seeing the value of NSX-v in SDDC environments, however there is no easy way to export the NSX Distributed Firewall (DFW) rules from NSX to a CSV file. To export all rules in the environment, we need to extract each of the firewall rule IDs and get the details extracted for each rule. We will then export this information in a CSV file and optionally email it to the requestor.\nTo begin, open vRO and create a HTTP-REST Host for each of your NSX Manager instances. Note the URL should be the FQDN with /api/ appended to the end.\nName: NSX Manager (Compute)\nURL: https://nsx-manager-compute.homelab.local**/api/**\nSilently accept the certificate: Yes\nHost Authentication Type: Basic\nSession Mode: Shared Session\nUsername: admin\nPassword: ****************\n    Once the REST Hosts have been added for each NSX Manager instance, import the workflow package com.gazflynn.nsx.export from GitHub or code.vmware.com to vRO and the workflows will be imported.\n        The vRO package contains three different workflows.\n NSX DFW Rule Export - This workflow will export a list of all Firewall Rules. NSX DFW Rule Hit Count - This workflow will export a list of all firewall rules with the hit count for each rule. NSX DFW Security Groups Export - This workflow will export a list of IP Addresses defined in each Security Group.  Before running each workflow, edit the workflow and adjust the email_xxxxxx attributes to suit your environment. You will need to enter a email_smtpHost, email_fromAddress etc. Once the attributes are set, run the workflow you wish. You are prompted to select if you want to email the CSV and if so, enter the recipients email addresses, and then select Submit. This will run the workflow and email the CSV file to the email addresses provided if selected. If you selected no to emailing the CSV file, it can be accessed from the vRO Server at the location /var/lib/vco/app-server/temp/\u0026lt;\u0026lt;filename\u0026gt;\u0026gt;.csv\n    Once you have the CSV results, you can also use the workflow \u0026quot;NSX DFW Security Groups Export\u0026quot; to map the IPs listed in each Security Group referenced in the DFW rules.\nAny suggestions on how to improve this or have a feature request? Please create an Issue on GitHub.\nThe output report will look like the sample below.\n\n","link":"https://garyflynn.com/post/export-nsx-dfw-rules-using-vro/","section":"post","tags":["DFW","Export","Firewall","NSX","VMware","VMware","vRO"],"title":"Export NSX DFW Rules using vRO"},{"body":"","link":"https://garyflynn.com/tags/firewall/","section":"tags","tags":null,"title":"Firewall"},{"body":"","link":"https://garyflynn.com/tags/nsx/","section":"tags","tags":null,"title":"NSX"},{"body":"","link":"https://garyflynn.com/tags/reclamation/","section":"tags","tags":null,"title":"Reclamation"},{"body":"","link":"https://garyflynn.com/tags/thresholds/","section":"tags","tags":null,"title":"Thresholds"},{"body":"","link":"https://garyflynn.com/tags/usage/","section":"tags","tags":null,"title":"Usage"},{"body":"In vRealize Automation 7.x, you can discover Deployments for reclamation in the Administration \u0026gt; Reclamation \u0026gt; Deployments (Tenant Administrator) view or the Administration \u0026gt; Reclamation \u0026gt; Tenant Machines (IaaS Administrator) view. The Advanced Search feature can be selected clicking \u0026gt; in the top right corner and you can search for VMs with Low or High CPU usage along with several other options. But what are the actual thresholds that vRA uses when you select \u0026quot;Low CPU\u0026quot;? The table below describes exactly what each of the metrics are, for each advanced search option.\n   Resource Metrics Value     CPU High CPU utilization\nLow CPU utilization Average Usage \u0026gt; 80%\nAverage Usage \u0026lt; 5%   Memory High Memory utilization\nLow Memory utilization Average Usage \u0026gt; 80%\nAverage Usage \u0026lt; 10%   Disk Low Hard Disk utilization Average Disk Usage \u0026lt; 2KB/s   Network Low Network utilization Average Network Usage \u0026lt; 1KB/s   Complex Metric Idle Powered-on machines below 20% for\nCPU, memory, disk, and network usage.    ","link":"https://garyflynn.com/post/vra-7-x-reclamation-machine-usage-thresholds/","section":"post","tags":["Reclamation","Thresholds","Usage","VMware","VMware","vRA"],"title":"vRA 7.x Reclamation Machine Usage Thresholds"},{"body":"With the introduction of NSX-v 6.4.2, NSX will now log the firewall rule hit count for each firewall rule in the DFW. You can then check the UI or API for the hit count on each individual firewall rule. This capability is fantastic, however there is no way to extract the hit count for every rule in the environment either through the UI or API. Hopefully the API is updated in the future for this feature ;)\nTo get the rule hit count for all rules in the environment, we need to extract each of the firewall rule IDs and run the API command to get the hit count for each rule. We will then export this information in a CSV file and optionally email it to the requestor.\nTo begin, open vRO and create a HTTP-REST Host for each of your NSX Manager instances. Note the URL should be the FQDN with /api/ appended to the end.\nName: NSX Manager (Compute)\nURL: https://nsx-manager-compute.homelab.local**/api/**\nSilently accept the certificate: Yes\nHost Authentication Type: Basic\nSession Mode: Shared Session\nUsername: admin\nPassword: ****************\n    Once the REST Hosts have been added for each NSX Manager instance, import the workflow package org.nsx.dfwrulehitcount.package from GitHub or code.vmware.com to vRO and the workflow will be imported.\n        Before running the workflow, edit the workflow and adjust the email_xxxxxx attributes to suit your environment. You will need to enter a email_smtpHost, email_fromAddress etc. Once the attributes are set, run the workflow. You are prompted to select if you want to email the CSV and if so, enter the recipients email addresses, and then select Submit. This will run the workflow and email the CSV file to the email addresses provided if selected. If you selected no to emailing the CSV file, it can be accessed from the vRO Server at the location /var/lib/vco/app-server/temp/nsx_rule_hit_count.csv\n    Once you have the CSV results, this can be used to analyse the rules which are seldom hit and to optimize the firewall rule implementation.\nAny suggestions on how to improve this or have a feature request? Please create an Issue on GitHub.\nThe output report will look like the below.\n\n","link":"https://garyflynn.com/post/extracting-nsx-dfw-rule-hit-counts/","section":"post","tags":["DFW","Firewall","NSX","VMware","VMware","vRO"],"title":"Extracting NSX DFW Rule Hit Counts"},{"body":"","link":"https://garyflynn.com/archives/","section":"","tags":null,"title":""},{"body":"","link":"https://garyflynn.com/tags/file-server/","section":"tags","tags":null,"title":"File Server"},{"body":"","link":"https://garyflynn.com/tags/file-share/","section":"tags","tags":null,"title":"File Share"},{"body":"A strange issue occasionally occurs on some servers where random network dropouts occur while accessing any file share (ie. \\\\servername\\c$). I recently came across this issue again and found this fantastic post on the technet forums. About half way down the page a solution is posted which fixed my issue!\nThe short version is that in Windows Server 2012 R2 the service / driver SRV2(Server SMB 2.xxx Driver) startup method was changed from Auto to Manual / On Demand. This means that the service is not running unless SMB2 traffic is requested. To check the service status run the below command in PowerShell as Administrator.\n1Get-Service srv2 | Format-List Status, Name, DisplayName, StartType     By running the command below in PowerShell as Administrator, you can set the service to Auto and ensure that SMB2 requests can be handled immediately and don't rely on the service starting cleaning in time. Ensure that you understand the implications of this as your servers will always be presenting SMB2 for consumption.\n1Set-Service -Name SRV2 -StartupType Automatic If you run the Get-Service command again you will see the updated StartType value.\n    By making this change, across all file servers no further issues were experienced. This seems to be a fairly common issue across the Microsoft landscape based off the comments in the technet forum and appears the Startup Type was not reverted in Windows Server 2016 so this issue could persist in future version also.\n","link":"https://garyflynn.com/post/file-shares-smb-not-working/","section":"post","tags":["File Server","File Share","Microsoft","Microsoft","Powershell","SMB"],"title":"File Shares / SMB Not Working"},{"body":"","link":"https://garyflynn.com/tags/microsoft/","section":"tags","tags":null,"title":"Microsoft"},{"body":"","link":"https://garyflynn.com/tags/powershell/","section":"tags","tags":null,"title":"Powershell"},{"body":"","link":"https://garyflynn.com/tags/smb/","section":"tags","tags":null,"title":"SMB"},{"body":"","link":"https://garyflynn.com/tags/memory/","section":"tags","tags":null,"title":"Memory"},{"body":"","link":"https://garyflynn.com/tags/metrics/","section":"tags","tags":null,"title":"Metrics"},{"body":"","link":"https://garyflynn.com/tags/upgrade/","section":"tags","tags":null,"title":"Upgrade"},{"body":"With vROps prior to 6.7, Memory metrics have caused confusion when comparing the memory metrics generated from vSphere to the metrics generated from the Ep Ops management agent installed on the guest OS. Currently, the metrics shown from the vSphere data collection are memory metrics as seen from the ESXi host layer / VMkernel. This value is at times largely different to the guest OS memory metrics, as explained below. I have a blog post here which explains the different memory metrics in vROps prior to 6.7\nActive memory is the âamount of memory that is actively used, as estimated by the VMkernel based on recently touched memory pagesâ. For example, although Windows processed have allocated 3GB / 4GB on a VM, only 500MB is actually being actively touched, so the VMkernel reports the active memory as 500MB.\nConsumed memory is the âamount of host physical memory consumed by a virtual machine, host, or clusterâ. âVM consumed memory = memory granted â memory saved due to memory sharingâ. This means that Consumed memory can include memory that the guest OS considers free. When comparing Task Manager memory usage to the Consumed Memory metric, you will see that Consumed Memory is almost always larger.\nvROps currently relies on Active Memory when calculating utilization and demand. This resulted in the memory utilization always appearing lower than what you see in the guest OS. Active memory is used by the capacity engine, which means that sizing requirements are also based on Active Memory, resulting is quite aggressive recommendations.\nIn vROps 6.7 \u0026amp; 7.0, several significant changes were made and notably the metric Guest|Needed Memory (KB) which is collected by VMware Tools is now used to greatly improve the quality of projection from the capacity engine as well as rightsizing. The Memory|Usage (%) metric has been changed to prefer Guest|Needed Memory (KB) collected from Vmware Tools, and now fails back to Memory|Non Zero Active (KB) if itâs not available.\nTypically, you would see that Guest|Needed Memory (KB) and Memory|Utilization (KB) are nearly identical (unless there is an issue collecting the metric from VMware Tools). Memory|Utilization (KB) is the metric used by the cpacity engine and therefore rightsizing recommendations. As you can see, itâs advantageous to ensure that Guest|Needed Memory (KB) is collecting from VMware Tools to get the best quality recommendations. The formula for the Memory|Utilization (KB) metric is below.\nIf VMware Tools is collectingâ¦\nMemory|Utilization (KB) = Guest|Needed Memory (KB) + ( Guest|Page In Rate per second * Guest|Page Size (KB) ) + Memory|Total Capacity (KB) â Guest|Physically Usable Memory (KB).\nMemory|Usage (%) will prefer Guest|Needed Memory (KB)\nIf VMware Tools is not collectingâ¦\nMemory|Utilization (KB) = Memory|Consumed (KB)\nMemory|Usage (%) will prefer Memory|Non Zero Active (KB)\nThis change allows you to use Memory|Usage (%) to show an aggressive percentage and Memory|Workload (%) to show a conservative percentage in dashboards and reports.\nSource: https://blogs.vmware.com/\n","link":"https://garyflynn.com/post/vrops-memory-metric-collection-changes-in-6-7-7-0/","section":"post","tags":["Memory","Metrics","Upgrade","VMware","VMware","vROps"],"title":"vROps Memory Metric Collection Changes in 6.7 \u0026 7.0+"},{"body":"Memory metrics in vROps have caused many customers confusion and I hope this post will explain the different metrics available and why the values don't necessarily reflect what you might think. Let's start with a few definitions to help set the context.\nVirtual Machine / Guest: The virtual operating system object where the guest OS such as Windows Server is installed.\nHost: The physical blade/rack mount server where ESXi is installed. The host consists of RAM, CPU, network etc.\nCluster: A group of hosts.\nMachine memory: The RAM thatâs physically installed in the hardware that comprises the ESXi server. This applies at the host layer.\nGuest âphysicalâ memory: The amount of physically installed memory presented to the virtual machine and made available when the virtual machine is running.\nOverhead Memory: The amount of machine memory allocated to a virtual machine beyond its reserved amount.\nAt the virtual machine layer, this is the amount of machine memory used by the VMkernel to run the virtual machine\nAt the host layer, this is the total of all overhead metrics for powered-on virtual machines, plus the overhead of running vSphere services.\nGranted Memory: At the virtual machine layer, the guest physical memory that is mapped to machine memory.\nIncludes shared memory. Does not include overhead.\nAt the host layer, it is the sum of all granted metrics for all powered-on virtual machines, plus machine memory for vSphere services on the host.\nConsumed Memory: At the virtual machine layer, this is the amount of guest physical memory used.\nVM consumed memory = memory granted â memory saved due to memory sharing.\nIt includes shared memory and memory that is reserved (but may not be used). Overhead memory is not included.\nAt the cluster layer, this metric shows the amount of host machine memory used by all powered on virtual machines in the cluster.\nA clusters consumed memory consists of virtual machine consumed memory and overhead memory.\nShared Memory: Memory sharing is a proprietary ESXi technique that can help achieve greater memory density on a host.\nWhen virtual machines that have the same applications or components loaded, or contain common data, a host uses a proprietary Transparent Page Sharing (TPS) technique to eliminate redundant copies of memory pages.\nThe amount of memory saved by memory sharing depends on whether the workload consists of nearly identical machines which might free up more memory.\nNote: Due to security concerns, inter-virtual machine transparent page sharing is disabled by default.\nPage sharing is being restricted to intra-virtual machine memory sharing.\nThis means page sharing does not occur across virtual machines and only occurs inside of a virtual machine.\nThe VMkernel maps guest physical memory to machine memory. However, because of the VMkernelâs unique memory-management techniques, such as ballooning, memory-sharing, swapping, and other techniques, guest physical memory-to-machine memory mapping does not have a 1:1 correspondence. Specifically, the VMkernel can:\n Map multiple regions of guest physical memory to a single region of machine memory (which the VMkernel does for memory sharing among virtual machines). Leave specific regions of guest physical memory and machine memory unmapped (which the VMkernel does during swapping and ballooning).  In the table below, the metrics used in vROps are explained:\nCapacity: Machine memory / the amount of physical memory installed per host in a vCenter Cluster.\nProvisioned: The amount of memory available to a guest OS / virtual machine.\nUsed: This metric is pulled from vROPs, specifically the âMemory|Consumed (GB)â metric.\nThat is certainly a lot to get your head around, but should provide some understanding. I was recently at a customer site where they completed a rightsizing exercise because this environment was run extremely hot (over-provisioning memory etc.). I was not involved in the rightsizing activity but was asked to comment why they had removed 300+GB from the VMs, but they didn't have any capacity to provision new VMs still. The part of the story that wasn't communicated well was that the reclaim activity will target the unused memory.\nThe rightsizing exercise completed, reclaimed memory which was not being used, hence the provisioned memory figure has fallen, but the used figure has not changed. In an environment not over-provisioned, organisations will typically ensure that the provisioned memory metric closely matches the peak used metrics. Rightsizing will not decrease the used figure and will not free up used resources. The used figure if of course dependent on what is happening in the virtual machine (i.e. the applications running).\nRightsizing is an important best practise activity which should be performed to ensure that your virtual machine provisioned resources closely matches the used resources, when evaluating the minimum, maximum and average values. This is a feature that vROps performs extremely well when determining if a virtual machine is oversized based on these metrics. The metrics being used in the version of vROps prior to 6.7+ are the correct metrics to be using as recommended by VMware. The fluctuation which is seen in the used memory values will be related to the workload on the virtual machines themselves, due to the workload of the applications installed etc.\nVMware has reworked the memory metrics in both vROps 6.7 and 7.0 and this has been well documented here by VMware. For vROps 6.7+, vROps will utilize VMware Tools to gather accurate Guest Memory utilization and this is reflected in the Memory|Usage (%) metric.\n","link":"https://garyflynn.com/post/vrops-memory-metrics-prior-to-vrops-6-7/","section":"post","tags":["Memory","Metrics","VMware","VMware","vROps"],"title":"vROps Memory Metrics - Prior to vROps 6.7+"},{"body":"","link":"https://garyflynn.com/tags/downgrade/","section":"tags","tags":null,"title":"Downgrade"},{"body":"I recently had the requirement to remove an existing vRealize Suite Enterprise key from vRealize Automation 7.3.1 and replace it with a vRealize Suite Advanced key. When you try to replace the license key from the VAMI, you will receive an error stating that you cannot downgrade license keys \u0026quot;Unable to downgrade existing license edition\u0026quot;. To replace the license you must do the following. Note, this is 100% not supported by VMware so use it at your own risk and always do it first in a test environment, and always ensure you have backups.\nBegin by performing a backup/snapshot of each server (vRA appliances \u0026amp; IaaS Windows servers) as well as performing a backup of the database manually. Creating a snapshot of the vRA environment is easily performed through vRealize Lifecycle Manager. Note, the DB server is not snapshotted and must be backed up manually.\n    Connect to the Windows DB server and confirm that no licenses exist in the DB by running the following command\n1SELECT * FROM [dbo].[LicenseKeys] If this returns no records, skip the following steps and proceed with removing the license from the vRA appliance\nRemoving existing license key from the IaaS DB If the previous command returned values, the run the following command to backup the existing table into a new table (dbo.LicenseKeys_backup)\n1SELECT * INTO SELECT * INTO dbo.LicenseKeys_backup FROM dbo.LicenseKeys FROM dbo.LicenseKeys Remove the license keys by running the below command\n1DELETE * FROM dbo.LicenseKeys If you need to restore the deleted license keys, run the below command\n1INSERT INTO LicenseKeys (SerialNumber) SELECT SerialNumber FROM LicenseKeys_backup WHERE NOT EXISTS (SELECT SerialNumber FROM LicenseKeys WHERE SerialNumber = LicenseKeys_backup.SerialNumber) Remove existing license from vRA vPostgres DB If you have a clustered setup, perform these step on one appliance only as the databases are synced. You can always connect to each instance and validate the data is consistent.\nConnect to the vRA appliance over SSH (using PuTTy) as the root user and stop the vRA service\n1/etc/init.d/vcac-server stop Switch to the postgres user to ensure you have permissions to perform the database operations\n1su - postgres Change directory to the application\n1cd /opt/vmware/vpostgres/current/bin Run the application psql to alter the vPostgres database\n1./psql Connect to the vcac database\n1\\c vcac Check the entries in the vPostgres database\n1select * from embeddedlicenseentry; Delete all of the entries in the table\n1delete from embeddedlicenseentry; Exit the application\n1\\q Switch back to the root user\n1sudo su - Start the vRealize Appliance service\n1/etc/init.d/vcac-server start Once the vRA service has started, the VAMI (port 5480) page will show no license key installed. You can now add your downgraded license and submit it. Once this is completed, I always perform a complete restart of the vRA environment (DB/IaaS/vRA) to ensure that the next time the application starts up we know that we haven't caused an issue.\n    ","link":"https://garyflynn.com/post/downgrade-remove-vra-license/","section":"post","tags":["Automation","Downgrade","Key","License","VMware","vRA","vRealize"],"title":"Downgrade / Remove vRA License"},{"body":"","link":"https://garyflynn.com/tags/key/","section":"tags","tags":null,"title":"Key"},{"body":"","link":"https://garyflynn.com/tags/license/","section":"tags","tags":null,"title":"License"},{"body":"Integrating vRA / vRO and Azure is available out-of-the-box with vRA 7.2+ and has been well documented by others for how to set the integration up (vaficionado.com).\nThe integration is fairly straightforward however I faced two main issues, the first being proxy settings and the second being an issue with the vRO workflow \u0026quot;Add an Azure connection\u0026quot;.\nUpdate Azure Plugin To resolve other vRO / Azure bugs, ensure you update the Azure plugin in vRO to the latest version from https://kb.vmware.com/s/article/55826Â (seeÂ attachmentÂ inÂ theÂ KB article). As the KB states, the updated plugin can be installed in vRA/vRO 7.2, 7.3, 7.3.1 \u0026amp; 7.4.\nProxy Server Issue To resolve the majority of proxy issues, ensure that your proxy server is configured to do no SSL interception (ie certificate replacement) / whitelist the below domains (list provided by VMware GSS)\n login.windows.net management.azure.com login.microsoftonline.com mystorageaccount.blob.core.windows.net ea.azure.com consumption.azure.com vrbc-services.vmware.com aws.amazon.com *.amazonaws.com  vRO Workflow Issue Once the plugin is updated and the URLs have been whitelisted by the proxy, the next issue I faced was with the vRO workflows \u0026quot;Add an Azure connection\u0026quot; and it failing at the third \u0026quot;Import a certificate from URL\u0026quot; when using a Proxy Server.\n    For this issue, a case was logged with VMware GSS and after spending far too much time troubleshooting, we realised this third child workflow \u0026quot;Import a certificate from URL\u0026quot;, doesn't actually do anything so it can be safely removed so that the workflow run will be successful.\nIncrease vRO Socket Timeout To ensure that the timeout issues do not occur between Azure and vRO, edit the vRO socket timeout value as per below commands to increase the timeout value from 30000 to 300000\n1cd /usr/lib/vcac/server/webapps/o11n-gateway-service/WEB-INF/classes/META-INF/spring/root 2cp o11n-gateway-service-context.xml o11n-gateway-service-context.xml.bak 3vi o11n-gateway-service-context.xml 4# Edit the line... 5\u0026lt;property name=\u0026#34;socketTimeout\u0026#34; value=\u0026#34;#{vcoConfig[\u0026#39;vco.socket.timeout.millis\u0026#39;]?:30000}\u0026#34;/\u0026gt; 6# Change the 30000 value to 300000 7:wq! 8service vcac-server restart ","link":"https://garyflynn.com/post/vra-vro-add-an-azure-connection/","section":"post","tags":["Azure","VMware","VMware","vRealize","vRO"],"title":"vRA / vRO - Add an Azure connection"},{"body":"","link":"https://garyflynn.com/tags/blogs/","section":"tags","tags":null,"title":"Blogs"},{"body":"","link":"https://garyflynn.com/tags/gaz-top-tips/","section":"tags","tags":null,"title":"Gaz Top Tips"},{"body":"Below is a collection of blog posts which I have found handy over the years and I hope you find them helpful too.\nReporting  VM CPU Counters in vSphere (virtual-red-dot.info) Windows vs ESX CPU Values (logicmonitor.com)  vSAN  Removing Inaccessible vSAN Objects (thinkcharles.net)  vCenter  Convert Thick Provisioned Disk to Thin Provisioned (theitbros.com)  ","link":"https://garyflynn.com/post/vmware-handy-blog-posts/","section":"post","tags":["Blogs","Gaz Top Tips","VMware","VMware"],"title":"VMware - Handy Blog Posts"},{"body":"One of the least discussed products from VMware, vRealize Lifecycle Manager (vRLCM), really is a fantastic product! I have been deploying vRealize Automation (vRA) since it was first purchased from DynamicOps and the first release of vCloud Automation Center was released. The vRealize suite of products have always been difficult to install and this product takes the majority of hassle out of this. This blog will cover the deployment of vRealize Lifecycle Manager.\nInstall vRealize Lifecycle Manager Appliance Download the vRealize Lifecycle Manager OVA from the VMware website and save it locally. Open the vSphere Client, select the appropriate cluster and select Deploy OVF Template. Deploy the appliance with the following settings\n Content Management: Disable. Select Enable if you want the ability to build and run infrastructure content as applications Storage: vsanDatastore Network: VM-Network-DPG Hostname: vrlcm.homelab.local Join CEIP: Yes or No Certificate Common Name: *.homelab.local Certificate Organisation Name: Homelab Certificate Organisation Unit: Homelab Certificate Country Code: GB Default Gateway: 192.168.0.1 Domain Name: homelab.local Domain Search Path: homelab.local Domain Name Servers: 192.168.0.120 IP Address: 192.168.0.111 Netmask: 255.255.255.0  Configure vRealize Lifecycle Manager Power the appliance on and then navigate to the UI https:///vrlcm. Log in with the default username admin@localhost and password vmware. You will be prompted to enter a new password. Once this is done, log in with the new credentials. From the homepage, select Settings (the wheel cog) in the left hand menu. Just to be certain, enter your new password in the root and admin@localhost password fields and select Save. Log back in again and select My VMware tab and log in with your My VMware account details which will allow for OVF/ISO downloading. If you want, you can now select to download all products however I will select No.\n    Scroll down the page a little and you will see the list of applications which can be deployed by vRLCM and the different versions. Select the versions you will deploy in your environment and download them.\n    This will initiate the download requests which you can track in the Requests tab on the left hand menu. Once this has completed, select Settings, Certificate and enter the information to create a generic self signed certificate which will be deployed to each of the applications deployed by vRLCM.\n    Once all of the applications have been downloaded, select Settings, Product Binaries, Add Product Binaries. Select My VMware Downloads and Discover. This will then map those downloads to the correct products and you can select to import the Install and/or Upgrade binaries.\n    With the products added, from the left hand menu, select Data Centers, Add Data Center. Enter a name for your Data Center and select an appropriate location.\n    Once the data center has been added, select Manage vCenter Servers and add your existing vCenter Server details. A data collection will be requested which you can verify has been successful from the Requests page.\n    Once the data collection has completed, you have successfully installed and configured vRealize Lifecycle Manager. Part two of this blog will cover deploying your first application.\n","link":"https://garyflynn.com/post/vrealize-lifecycle-manager-part-1-install-configure/","section":"post","tags":["Configure","Install","Lifecycle Manager","VMware","VMware","vRealize"],"title":"vRealize Lifecycle Manager Part 1 - Install \u0026 Configure"},{"body":"","link":"https://garyflynn.com/tags/esxi/","section":"tags","tags":null,"title":"ESXi"},{"body":"To setup the NUC and install ESXi, follow part one of this guide. To configure the basic vSAN configuration for deployments pre vCenter 6.7, follow part two of this guide.\nvCenter Appliance Installation With the Intel NUCs set up (and a vSAN datastore created if running pre 6.7 vCenter), it is time to install the vCenter Server Appliance (vCSA). As you probably know, the Windows vCenter Server is deprecated, so the vCSA will be deployed. Download the ISO, mount it to your PC and run the UI installer located inÂ \u0026quot;Drive:\\vcsa-ui-installer\\win32\\installer.exe\u0026quot;. The process to deploy vCSA has been documented extensively on many blogs including this one from Virtual Reality. For reference, I am installing the vcsa with the following configuration. Note that we don't have working DNS, so the FQDN and DNS Server should be the IP Address of the vCSA and the IP address of the default gateway (Virtually Ghetto).\n vCenter Server with Embedded Platform Services Controller (PSC) ESXi Host: 192.168.0.100 (enter the credentials for root user) Certificate: Accepted VM Name: vcenter-1 vCSA Root Password: **************** Deployment Size: Tiny Storage Size: Default Storage: Install on a new vSAN Cluster containing the target host Datacenter Name: Homelab Datacenter Cluster Name: Homelab Cluster Enable Thin Disk Mode: Yes Enable Deduplication and compression: Yes Network: VM Network IP Assignment: Static FQDN: 192.168.0.110 (this removes the requirement of working DNS) IP Address: 192.168.0.110 Subnet Mask: 24 Default Gateway: 192.168.0.1 DNS Servers: 192.168.0.1 (this removes the requirement of working DNS)  Once stage 1 has completed and the appliance has been deployed, the vCSA server needs to be configured. I have highlighted my configuration below\n NTP Servers: uk.pool.ntp.org (future AD DNS / NTP server) SSH Access: Enabled (I always do this for troubleshooting, however the service should ALWAYS be left DISABLED once in production) Create a new SSO domain Single Sign-On domain name: vsphere.local (do not use your AD domain name as it will cause authentication conflicts) Single Sign-On username: administrator Configure CEIP: Enable or Disable  vCenter Server Appliance Configuration Once this has completed you will be able to access the vCenter server at the url https://\u0026lt;vcenter-ip-address\u0026gt; where you can launch the HTML5 or Flex client and confirm that you can log in with the username administrator@vsphere.local and the password you created in the installer. Once you are logged in, you will see a licensing warning. Select Manage licenses and add your vCenter Server licenses. Once the license is added, locate the vCenter server instance and assign the license to it. One of the many benefits to using vSphere is the vSphere Distributed Switch (vDS). To make use of this in a lab environment where we only have one host added so far is a little tricky, but William Lam has a great article over at Virtually Ghetto which documents the process. The process is to disable Network Rollback through the vCenter Advanced Settings, creating a vDS with a Management and VM-Network Distributed Port Group (DPG) and ensuring the DPG for the vCSA appliance is an Ephermeral - no binding and not Static Binding. Then right click on the Data Centre and select Migrate VMs to Another Network and specify the Standard Switch network as the source and your vDS network as the destination. On each of the next screens select the correct NIC mappings to ensure that your physcial NIC is migrated from the Standard Switch to the vDS. Even if you elect to migrate the vCSA network as part of the wizard, this will fail. Next you will need to log into the ESXi Host UI and manually edit the VM settings and select the new vDS network. Give the vCSA a reboot and hopefully it should come back up without issues. I did however face a HTTP 503 Service Unavailable error however the solution was to putty into the host and run the below two commands to check the service status which showed a lot of services down, so I then ran the second command to bring everything back up. I never encountered this issue again so hopefully a once off bug.\n1service-control --status 2service-control --start --all With vCenter up and running again, log in and select Policies and Profiles, VM Storage Policies, vSAN Default Storage Policy. Select Edit and change the value for \u0026quot;Primary level of failures to tolerate\u0026quot; from 1 to 0 and Enable Force Provisioning. This will enable provisioning before we deploy a domain controller and the vSAN witness appliance. I won't go into the details in this blog as there are plenty of others around but the next step is to deploy a Windows Server as an Active Directory Domain Controller. I have deployed the server dc-1 with IP address 192.168.0.120 and created a domain called homelab.local following my guide here. Once this is complete, create DNS forward and reverse lookup records for the ESXi hosts (1-3) and the vCSA server. You can also reconfigure the vcsa server with the correct DNS settings (https://192.168.0.110:5480) along with the ESXi servers using the Direct Connect Console. Once DNS settings are correct everywhere, remove the current hosts from the vCenter Server inventory and re-add them using the FQDN (esx-1.homelab.local in the vSAN Cluster, esx-2.homelab.local in the vSAN cluster and esx-3.homelab.local in the vSAN Datacenter).Â    Name IP Address     ISP Router 192.168.0.1   DHCP Clients (Home PCs \u0026amp; Laptops) 192.168.0.10 - 192.168.0.98   TP-Link Switch 192.168.0.99   Intel NUC (esx-1) 192.168.0.100   Intel NUC (esx-2) 192.168.0.101   vSAN Witness (esx-3) 192.168.0.102 (management)\n192.168.0.103 (vsan witness)   vCenter Server (vcsa) 192.168.0.110   AD Domain Controller (dc-1) 192.168.0.120 (homelab.local)    ","link":"https://garyflynn.com/post/homelab-setup-part-3-vcenter-install-configure/","section":"post","tags":["ESXi","Homelab","vCenter","VMware","VMware","vSAN","vSphere"],"title":"Homelab Setup Part 3 - vCenter Install \u0026 Configure"},{"body":"","link":"https://garyflynn.com/tags/vcenter/","section":"tags","tags":null,"title":"vCenter"},{"body":"","link":"https://garyflynn.com/tags/vsan/","section":"tags","tags":null,"title":"vSAN"},{"body":"","link":"https://garyflynn.com/tags/active-directory/","section":"tags","tags":null,"title":"Active Directory"},{"body":"This blog covers creating a new Active Directory forest and adding a secondary domain controller to the domain via PowerShell.\nCreate Active Directory Forest To create a new Active Directory (AD) forest, the below PowerShell commands can be run to simplify the process. To start off, run the below command to install the appropriate Windows Feature.\n1Install-WindowsFeature AD-Domain-Services -IncludeManagementTools     Run the below command to add the AD module into PowerShell now that it has been installed.\n1Import-Module ADDSDeployment Once this has completed, it is time to create the AD forest. Adjust the below command to suit your own environment.\n1Install-ADDSForest -CreateDnsDelegation:$false -DatabasePath \u0026#34;C:\\Windows\\NTDS\u0026#34; -DomainMode \u0026#34;Win2012R2\u0026#34; -DomainName \u0026#34;homelab.local\u0026#34; -DomainNetbiosName \u0026#34;homelab\u0026#34; -ForestMode \u0026#34;Win2012R2\u0026#34; -InstallDns:$true -LogPath \u0026#34;C:\\Windows\\NTDS\u0026#34; -NoRebootOnCompletion:$false -SysvolPath \u0026#34;C:\\Windows\\SYSVOL\u0026#34; -Force:$true You will then be prompted to enter the SafeModeAdministratorPassword and again to verify it. Once this is entered you will see the console performing the operations and the server will eventually restart.\n        And that is pretty much it. Once the restart is finished you will be able to log in with your old local administrator (it is now the domain administrator) and configure your AD \u0026amp; DNS domain as you need.\nAdd Secondary Domain Controller To create a secondary domain controller, ensure that your server has already joined the domain and you have completed all other post-provisioning tasks. To start off, run the below command to install the appropriate Windows Feature.\n1Install-WindowsFeature AD-Domain-Services -IncludeManagementTools     Run the below command to add the AD module into PowerShell now that it has been installed.\n1Import-Module ADDSDeployment Once this has completed, it is time to join the server to the domain as a domain controller.\n1$cred = Get-Credential 2Install-ADDSDomainController -CreateDnsDelegation:$false -DatabasePath \u0026#34;C:\\Windows\\NTDS\u0026#34; -DomainName \u0026#34;homelab.local\u0026#34; -InstallDns:$true -LogPath \u0026#34;C:\\Windows\\NTDS\u0026#34; -NoGlobalCatalog:$false -SysvolPath \u0026#34;C:\\Windows\\SYSVOL\u0026#34; -NoRebootOnCompletion:$false -Credential $cred -Force:$true Once the server has restarted, you will be able to log into the domain controller as a domain administrator.\n","link":"https://garyflynn.com/post/create-active-directory-forest-via-powershell/","section":"post","tags":["Active Directory","Microsoft","Microsoft","Powershell","Windows"],"title":"Create Active Directory Forest via PowerShell"},{"body":"","link":"https://garyflynn.com/tags/windows/","section":"tags","tags":null,"title":"Windows"},{"body":"This guide will cover the ESXi installation and configuration process. If installing ESXi onto a bare-metal server from a USB, follow my guide here on how to create a bootable USB installer. Once you have your installation media ready, either a USB installer or the downloaded ISO, insert / attach the media and power on your server. If you are doing this in a nested ESXi environment, attach the media via the VMware Remote Console.\n        Once the installer has launched the wizard below, the installer is now loaded to memory and the installation media can be removed. If you are using a USB, you can leave the USB drive attached and install ESXi onto the USB and boot from there in future. Select Enter to continue.\n    Just like all good administrators do, have a read of the EULA and accept them if you do, by pressing F11.\n    The installer will then scan for available storage attached to the server...\n    Once the scan has finished it will show you the available drives. For this example, there is an 8GB disk for the ESXi installation, a 512GB SSD for vSAN Capacity Tier and a 256GB SSD for vSAN Cache Tier. Select the appropriate drive, and select Enter.\n    Select the appropriate Language and select Enter.\n    Enter a password for the root user. This should be a complex password and I recommend using a Password Generator to create a long and complex password, without special characters, to avoid issues. Ensure that the passwords match and select Enter.\n    One final confirmation screen. Select F11 and the installation will begin.\n        Once the installation is complete you will see the below screen. Ensure that the installation media is removed (the mounted ISO or the attached USB if you haven't used the USB as the boot device) and select Enter to restart the server.\n    Once the server has restarted, check the console screen and select F2 to load the login dialog box. Enter the password you set for the root user and select Enter.\n        Once you have successfully logged in, we need to configure the networking. Scroll down to Configure Management Networking, and select Enter.\n    Select Network Adapters and you will notice that if you have multiple NICs connected to the server, only NIC1 is selected. To ensure management network redundancy, highlight NIC2 and select Space to toggle the connection status. With both NICs selected, select Enter.\n    Navigate to VLAN and enter your VLAN ID for the management network if you have one, otherwise leave this blank.\n    Navigate to IPv4 Configuration and press Enter. Navigate to \u0026quot;Set static IPv4 address and network configuration\u0026quot; and select Space. Navigate and enter the appropriate IPv4 address, subnet mask and default gateway. Press Enter to Save the configuration\n    Navigate to IPv6 Configuration and select Enter. Navigate to \u0026quot;Disable IPv6\u0026quot; and select Space and Enter to Save the configuration. Note that a restart of the server will be required for this setting to be applied.\n    Navigate to DNS Configuration and select |Use the following settings\u0026quot; by selecting Space and enter your DNS servers and the hostname of the server. Select Enter to save.\n    Navigate to Custom DNS Suffixes and enter your domain name. Select Enter to Save.\n    With all of the configuration done, select Esc and select Y to restart the host when prompted.\n    Once the host has been restarted, the network will now be available and you should be able to access the Host UI available atÂ https:///ui/ where you can log in with the root username and password set during the installation.\n    ","link":"https://garyflynn.com/post/esxi-install-and-configure/","section":"post","tags":["Configure","ESXi","Homelab","Install","VMware","VMware"],"title":"ESXi Install and Configure"},{"body":"To setup the NUC and install ESXi, follow part one of this guide. The following is the process to bootstrap loading the vCenter Server Appliance onto a vSAN datastore. This process was replaced in vCenter 6.7 which provides this capability natively through the installer. If you are deploying vCenter 6.7+, skip through to part three.\nvSAN Configuration To install vCenter you need the datastore in place, which for my environment is vSAN. However to configure vSAN, this is done through vCenter. A classic chicken and egg scenario which thankfully VMware have the solution for. You can bootstrap the vSAN datastore which William Lam has documented over at virtuallyghetto.comÂ and my configuration steps are below. On the first host, enable SSH and SSH into the host. Modify the default vSAN policy to enable force provisioning.\n1esxcli vsan policy setdefault -c vdisk -p \u0026#34;((\\\u0026#34;hostFailuresToTolerate\\\u0026#34; i1) (\\\u0026#34;forceProvisioning\\\u0026#34; i1))\u0026#34; 2esxcli vsan policy setdefault -c vmnamespace -p \u0026#34;((\\\u0026#34;hostFailuresToTolerate\\\u0026#34; i1) (\\\u0026#34;forceProvisioning\\\u0026#34; i1))\u0026#34; Confirm the changes were made successfully by running the getdefault command below to confirm the vSAN policy\n1~ # esxcli vsan policy getdefault 2Policy Class Policy Value 3------------ -------------------------------------------------------- 4cluster ((\u0026#34;hostFailuresToTolerate\u0026#34; i1)) 5vdisk ((\u0026#34;hostFailuresToTolerate\u0026#34; i1) (\u0026#34;forceProvisioning\u0026#34; i1)) 6vmnamespace ((\u0026#34;hostFailuresToTolerate\u0026#34; i1) (\u0026#34;forceProvisioning\u0026#34; i1)) 7vmswap ((\u0026#34;hostFailuresToTolerate\u0026#34; i1) (\u0026#34;forceProvisioning\u0026#34; i1)) Next step is to work out which disks will be used by the vSAN datastore. Run the below command to get the output\n1vdq -q Once you have found the 500GB capacity tier SSD and the 256GB cache tier SSD, record the device name ready to be used later. The value will be in brackets under Display Name. For my environment the values are below\n1500GB Capacity Tier Device Name 2t10.ATA_____Samsung_SSD_860_EVO_500GB_______________S3Z2NB0K329187Z_____ 34256GB Cache Tier Device Name 5t10.NVMe____Samsung_SSD_960_EVO_250GB_______________4301B18154382500 Create a new vSAN cluster with the command below\n1esxcli vsan cluster new Confirm the new vSAN cluster has been created successfully\n1esxcli vsan cluster get Set the 500GB SSD as a capacity tier drive by running the following command and substituting the device name for your environment as recorded earlier\n1esxcli vsan storage tag add -d t10.ATA_____Samsung_SSD_860_EVO_500GB_______________S3Z2NB0K329187Z_____ -t capacityFlash Finally the vSAN all flash disk group is created with the below command to add the two SSDs into the cluster\n1esxcli vsan storage add -s t10.NVMe____Samsung_SSD_960_EVO_250GB_______________4301B18154382500 -d t10.ATA_____Samsung_SSD_860_EVO_500GB_______________S3Z2NB0K329187Z_____ To verify the vSAN cluster has been created and the disks have been added, run the below command and check the output\n1esxcli vsan storage list Part 3 of this guide will cover the initial vCenter Server Configuration and is available here.\nNote: If you get stuck with vSAN and need to remove all of the partitions, run the commands below to format all of your data and start your homelab from scratch!\n1esxcli vsan cluster leave 2reboot 3vdq -q 4partedUtil delete /dev/disks/t10.ATA_____Samsung_SSD_850_EVO_500GB_______________S2RBNX1JC25558T_____ 1 5partedUtil delete /dev/disks/t10.ATA_____Samsung_SSD_850_EVO_500GB_______________S2RBNX1JC25558T_____ 2 6partedUtil delete /dev/disks/t10.NVMe____Samsung_SSD_960_EVO_250GB_______________4901B18154382500 1 7partedUtil delete /dev/disks/t10.NVMe____Samsung_SSD_960_EVO_250GB_______________4901B18154382500 2 ","link":"https://garyflynn.com/post/homelab-setup-part-2-vsan-configuration/","section":"post","tags":["Homelab","Intel","NUC","Storage","vCenter","VMware","vSAN","vSphere"],"title":"Homelab Setup Part 2 - vSAN Configuration"},{"body":"","link":"https://garyflynn.com/tags/intel/","section":"tags","tags":null,"title":"Intel"},{"body":"","link":"https://garyflynn.com/tags/nuc/","section":"tags","tags":null,"title":"NUC"},{"body":"","link":"https://garyflynn.com/tags/storage/","section":"tags","tags":null,"title":"Storage"},{"body":"To install ESXi onto a bare metal server without a CD/DVD drive or a KVM console, the simplest way is to create a bootable USB drive with the ESXi installer. To do this, we will use a tool called Rufus.\n Download the latest portable release of Rufus Download the ESXi ISO image (.iso file type)  ESXi 6.7 ESXi 6.5   Connect the USB device to your Computer Open Rufus Select the USB device Select the ESXi installer ISO Ensure 'MBR partition' \u0026amp; 'BIOS or EUFI' are selected Select Start Select Yes to replace menu.c32  All done! When booting from the USB installer, you can also use the same device as the install location as the installer is loaded to memory when the server boots and the USB device is not touched.\n","link":"https://garyflynn.com/post/create-a-bootable-usb-esxi-installer/","section":"post","tags":["ESXi","ISO","Rufus","USB","VMware","VMware"],"title":"Create a Bootable USB ESXi Installer"},{"body":"","link":"https://garyflynn.com/tags/iso/","section":"tags","tags":null,"title":"ISO"},{"body":"","link":"https://garyflynn.com/tags/rufus/","section":"tags","tags":null,"title":"Rufus"},{"body":"","link":"https://garyflynn.com/tags/usb/","section":"tags","tags":null,"title":"USB"},{"body":"I have recently decided to purchase a homelab for myself to assist with getting my certifications up to date and after much research and procrastinating I have gone with the setup below. Overall I have been very happy with the performance and compatibility of everything and I have tried to link to all of the useful blogs that helped me along the way.\nHardware 1 x TP-Link TL-SG108E 8 Port Switch (Amazon UK)\n3 x Intel NUC 7 Baby Canyon i3 NUC7i3BNH (Amazon UK)\nEach Intel NUC contains the following...\n2 x Crucial 16GB DDR4 2400MT/s Memory for 32GB total RAM (Amazon UK)\n1 x Crucial 16GB DDR4 2400MT/s Memory for SODIMM1 (Amazon UK)\n1 x Samsung 32GB DDR4 2666 MHz Memory for SODIMM2 (SCAN) (total 48GB)\n1 x Samsung 500GB SSD 860 EVO for vSAN Capacity Tier (Amazon UK)\n1 x Samsung 250GB NVMe SSD for vSAN Cache Tier (Amazon UK)\n1 x SanDisk Cruzer Fit USB Flash Drive to boot ESXi (Amazon UK)\nSetup the NUC and Install ESX There are plenty of blogs already about running ESXi on Intel NUCs and I found thisÂ virten.net blogÂ by Florian a great resource. To start things off, plug in the switch and connect LAN1 to your upstream / ISP router. You should now be able to plug in a laptop/desktop PC to confirm that you are able to get a valid IP address and ping the default gateway / upstream ISP router. Manually configure the IP address of the router so that it isn't assigned via DHCP by downloading theÂ Easy Smart Configuration UtilityÂ (SCU), locating the device and setting it through the GUI. Note the default username \u0026amp; password are admin/admin. Select Apply and\n    Now the router is on the network with a static IP address, login via the TP-Link SCU, select System Info and confirm the hardware version (my unit is TL-SG108E 3.0). Head over to the support page and download the latest firmware version for your hardware version \u0026amp; model number from tp-link.com and upload the .BIN file in the SCU under System, Firmware Upgrade and complete the upgrade.\nNow the network is up again, download the latest BIOS update for your Intel NUC and copy the .BIN file to the SanDisk Cruzer USB. Boot up each Intel NUC and select F7 to open the BIOS Update menu and follow this guide how to install the update. Select the .BIN ISO file and let the Intel NUC reboot. With the BIOS updated, time to install ESXi. Download the ESXi installer (ESXi 6.7) and Rufus which is used to create a bootable USB with the ESXi ISO. Once the ESXi ISO is downloaded, plug in the SanDisk Cruzer USB to your PC, open Rufus, select the ISO and create the bootable USB. For the full guide, check out my full guide here.\nOnce the bootable image is created, boot up the Intel NUC and quickly select F10 at boot time to load the BIOS Settings. Select Advanced to switch to the Advanced settings and select the Security tab. To resolve the below two alarms preemptively, untick \u0026quot;Intel Platform Trust Technology\u0026quot; and Save \u0026amp; Exit.\n Host TPM attestation alarm TPM 2 device detected but a connection cannot be established  With the bootable USB ESXi installer ready, plug it into the first Intel NUC, select F10 to open the boot menu and select USB device. The ESXi installer is loaded into memory so as you progress through the installer, you can install ESXi to the same USB which has the installer. Pretty cool right? To run through the installer and set up the network configuration, check out my full guide available here. The configuration of my ESXi hosts are below but keep in mind we will change the DNS settings and domain name once we have an Active Directory (AD) server up and running.\n Hostname: esx-1; esx-2; esx-3 IP Address: 192.168.0.100; 192.168.0.101 Default Gateway: 192.168.0.1 DNS Server: 192.168.0.1  The environment so far...\n   Name IP Address     ISP Router 192.168.0.1   DHCP Clients (Home PCs \u0026amp; Laptops) 192.168.0.10 - 192.168.0.98   TP-Link Switch 192.168.0.99   Intel NUC (esx-1) 192.168.0.100   Intel NUC (esx-2) 192.168.0.101   vSAN Witness (esx-3) 192.168.0.102 (management)\n192.168.0.103 (vsan witness)   vCenter Server (vcsa) 192.168.0.110   AD Domain Controller (dc-1) 192.168.0.120 (homelab.local)    Part 2 of this guide will cover the initial vSAN Configuration and is available here.\n","link":"https://garyflynn.com/post/homelab-setup-part-1-intel-nuc/","section":"post","tags":["ESXi","Homelab","Intel","NUC","VMware","VMware"],"title":"Homelab Setup Part 1 - Intel NUC"},{"body":"Who we are Our website address is: https://garyflynn.com.\nComments When visitors leave comments on the site we collect the data shown in the comments form, and also the visitorâs IP address and browser user agent string to help spam detection. An anonymised string created from your email address (also called a hash) may be provided to the Gravatar service to see if you are using it. The Gravatar service privacy policy is available here: https://automattic.com/privacy/. After approval of your comment, your profile picture is visible to the public in the context of your comment.\nMedia If you upload images to the website, you should avoid uploading images with embedded location data (EXIF GPS) included. Visitors to the website can download and extract any location data from images on the website.\nCookies If you leave a comment on our site you may opt-in to saving your name, email address and website in cookies. These are for your convenience so that you do not have to fill in your details again when you leave another comment. These cookies will last for one year. If you have an account and you log in to this site, we will set a temporary cookie to determine if your browser accepts cookies. This cookie contains no personal data and is discarded when you close your browser. When you log in, we will also set up several cookies to save your login information and your screen display choices. Login cookies last for two days, and screen options cookies last for a year. If you select \u0026quot;Remember Me\u0026quot;, your login will persist for two weeks. If you log out of your account, the login cookies will be removed. If you edit or publish an article, an additional cookie will be saved in your browser. This cookie includes no personal data and simply indicates the post ID of the article you just edited. It expires after 1 day.\nEmbedded content from other websites Articles on this site may include embedded content (e.g. videos, images, articles, etc.). Embedded content from other websites behaves in the same way as if the visitor has visited the other website. These websites may collect data about you, use cookies, embed additional third-party tracking, and monitor your interaction with that embedded content, including tracing your interaction with the embedded content if you have an account and are logged in to that website.\nWho we share your data with We do not knowingly share your data with any third-party providers.\nHow long we retain your data If you leave a comment, the comment and its metadata are retained indefinitely. This is so we can recognise and approve any follow-up comments automatically instead of holding them in a moderation queue. For users that register on our website (if any), we also store the personal information they provide in their user profile. All users can see, edit, or delete their personal information at any time (except they cannot change their username). Website administrators can also see and edit that information.\nWhat rights you have over your data If you have an account on this site or have left comments, you can request to receive an exported file of the personal data we hold about you, including any data you have provided to us. You can also request that we erase any personal data we hold about you. This does not include any data we are obliged to keep for administrative, legal, or security purposes.\nWhere we send your data Visitor comments may be checked through an automated spam detection service.\n","link":"https://garyflynn.com/post/privacy-policy/","section":"post","tags":null,"title":"Privacy Policy"},{"body":"The following Power-CLI command will evaluate a specific cluster and return the ratio of memory utilisation between Windows and Red Hat Linux virtual machines.\n1# Variable settings 2$clusterName = \u0026#34;insert cluster name\u0026#34; 34$winVMs = Get-Cluster $clusterName | Get-VM | ? {$_.Guest.OSFullName -like \u0026#39;Microsoft Windows Server*\u0026#39;} | Select Name, PowerState, MemoryGB 56$lnxVMs = Get-Cluster $clusterName | Get-VM | ? {$_.Guest.OSFullName -like \u0026#39;Red Hat*\u0026#39;} | Select Name, PowerState, MemoryGB 78foreach($winVM in $winVMs){ $winMemTotal += $winVM.MemoryGB } 9foreach($lnxVM in $lnxVMs){ $lnxMemTotal += $lnxVM.MemoryGB } 1011$memTotal = $winMemTotal + $lnxMemTotal 12$winMemSplit = $winMemTotal / $memTotal 13$winMemSplit *= 100 14$winMemSplit = [math]::Round($winMemSplit) 15$lnxMemSplit = $lnxMemTotal / $memTotal 16$lnxMemSplit *= 100 17$lnxMemSplit = [math]::Round($lnxMemSplit) 1819\u0026#34;Windows memory total is \u0026#34; + [math]::Round($winMemTotal) + \u0026#34;GB\u0026#34; 20\u0026#34;Linux memory total is \u0026#34; + [math]::Round($lnxMemTotal) + \u0026#34;GB\u0026#34; 21\u0026#34;The split between Windows and Linux is... Windows \u0026#34; + $winMemSplit + \u0026#34;% to Linux \u0026#34; + $lnxMemSplit + \u0026#34;%\u0026#34; ","link":"https://garyflynn.com/post/get-memory-allocated-based-on-os/","section":"post","tags":["vCenter","VMware","VMware","vSphere"],"title":"Get memory allocated based on OS"},{"body":"","link":"https://garyflynn.com/tags/configuration-manager/","section":"tags","tags":null,"title":"Configuration Manager"},{"body":"","link":"https://garyflynn.com/tags/query/","section":"tags","tags":null,"title":"Query"},{"body":"","link":"https://garyflynn.com/tags/sccm/","section":"tags","tags":null,"title":"SCCM"},{"body":"","link":"https://garyflynn.com/tags/system-center/","section":"tags","tags":null,"title":"System Center"},{"body":"Every Microsoft System Center Configuration Manager (SCCM) administrator has a handful of WQL Collection Queries that you hang onto. I figured I would share my most commonly used queries. Let me know in the comments if you have any others. The below are just examples and you should test if they are appropriate for your environment.\nAll Servers\nselect SMS_R_SYSTEM.ResourceID, SMS_R_SYSTEM.ResourceType, SMS_R_SYSTEM.Name, SMS_R_SYSTEM.SMSUniqueIdentifier, SMS_R_SYSTEM.ResourceDomainORWorkgroup, SMS_R_SYSTEM.Client from SMS_R_System inner join SMS_G_System_SYSTEM on SMS_G_System_SYSTEM.ResourceId = SMS_R_System.ResourceId where SMS_G_System_SYSTEM.SystemRole = \u0026quot;Server\u0026quot;\n**All Windows servers\n**select SMS_R_SYSTEM.ResourceID, SMS_R_SYSTEM.ResourceType, SMS_R_SYSTEM.Name, SMS_R_SYSTEM.SMSUniqueIdentifier, SMS_R_SYSTEM.ResourceDomainORWorkgroup, SMS_R_SYSTEM.Client from sms_r_system where OperatingSystemNameAndVersion like \u0026quot;Microsoft Windows NT%Server%\u0026quot;\nAll Domain Controllers\nselect SMS_R_SYSTEM.ResourceID, SMS_R_SYSTEM.ResourceType, SMS_R_SYSTEM.Name, SMS_R_SYSTEM.SMSUniqueIdentifier, SMS_R_SYSTEM.ResourceDomainORWorkgroup, SMS_R_SYSTEM.Client from SMS_R_System INNER JOIN SMS_G_System_COMPUTER_SYSTEM ON SMS_G_System_COMPUTER_SYSTEM.ResourceId = SMS_R_System.ResourceId WHERE SMS_G_System_COMPUTER_SYSTEM.Roles LIKE \u0026quot;%Domain_Controller%\u0026quot;\n**Servers with a specific hostname\n**select SMS_R_SYSTEM.ResourceID, SMS_R_SYSTEM.ResourceType, SMS_R_SYSTEM.Name, SMS_R_SYSTEM.SMSUniqueIdentifier, SMS_R_SYSTEM.ResourceDomainORWorkgroup, SMS_R_SYSTEM.Client from SMS_R_System inner join SMS_G_System_SYSTEM on SMS_G_System_SYSTEM.ResourceId = SMS_R_System.ResourceId where SMS_G_System_SYSTEM.Name like \u0026quot;$hostname%\u0026quot;\nServers with a specific application installed\nselect SMS_R_SYSTEM.ResourceID, SMS_R_SYSTEM.ResourceType, SMS_R_SYSTEM.Name, SMS_R_SYSTEM.SMSUniqueIdentifier, SMS_R_SYSTEM.ResourceDomainORWorkgroup, SMS_R_SYSTEM.Client from SMS_R_System inner join SMS_G_System_ADD_REMOVE_PROGRAMS on SMS_G_System_ADD_REMOVE_PROGRAMS.ResourceID = SMS_R_System.ResourceId inner join SMS_G_System_ADD_REMOVE_PROGRAMS_64 on SMS_G_System_ADD_REMOVE_PROGRAMS_64.ResourceId = SMS_R_System.ResourceId where SMS_G_System_ADD_REMOVE_PROGRAMS.DisplayName like \u0026quot;%Wireshark%\u0026quot; or SMS_G_System_ADD_REMOVE_PROGRAMS_64.DisplayName like \u0026quot;%Wireshark%\u0026quot;\nIs a Service present and running\nselectÂ SMS_R_System.ResourceId, SMS_R_System.ResourceType, SMS_R_System.Name, SMS_R_System.SMSUniqueIdentifier, SMS_R_System.ResourceDomainORWorkgroup, SMS_R_System.Client fromÂ SMS_R_System inner join SMS_G_System_SERVICE on SMS_G_System_SERVICE.ResourceID = SMS_R_System.ResourceId where SMS_G_System_SERVICE.Name = \u0026quot;ServiceName\u0026quot; and SMS_G_System_SERVICE.State = \u0026quot;Running\u0026quot;\nHeartbeat DiscoveryÂ Last Completion Greater thanÂ 14\nselect SMS_R_SYSTEM.ResourceID, SMS_R_SYSTEM.ResourceType, SMS_R_SYSTEM.Name, SMS_R_SYSTEM.SMSUniqueIdentifier, SMS_R_SYSTEM.ResourceDomainORWorkgroup, SMS_R_SYSTEM.Client from SMS_R_System where SMS_R_System.ResourceId not in (select ResourceID from SMS_R_System where AgentName in (\u0026quot;Heartbeat Discovery\u0026quot;) and DATEDIFF(day,AgentTime,GetDate())\u0026lt;=14)\nAll Appliances\nselect SMS_R_SYSTEM.ResourceID, SMS_R_SYSTEM.ResourceType, SMS_R_SYSTEM.Name, SMS_R_SYSTEM.SMSUniqueIdentifier, SMS_R_SYSTEM.ResourceDomainORWorkgroup, SMS_R_SYSTEM.Client from sms_r_system where OperatingSystemNameAndVersion like '%SLES%'\n","link":"https://garyflynn.com/post/useful-sccm-collection-queries/","section":"post","tags":["Configuration Manager","Microsoft","Query","SCCM","System Center"],"title":"Useful SCCM Collection Queries"},{"body":"With access to vCenter or vRealize Automation comes great responsibility. Clients often require a quick and easy way to take a short term snapshot of a server so that they can quick and easily rollback application changes. VMware provides a robust snapshot function, however when things go well these snapshots are often left behind or forgotten about.\nRun PowerCLI and run the below commands to get a list of all VMs with a Snapshot\n1Get-VM | Get-Snapshot     \nTo make the output a little nicer on the eye, run the following command\n1Get-VM | Get-Snapshot | Select VM,Name,Description,{[int]$_.SizeMB},Created     \nTo limit the results to only snapshots that are greater than 7 days old, run the following command\n1Get-VM | Get-Snapshot | Where { $_.Created -lt (Get-Date).AddDays(-7)} | Select VM,Name,Description,{[int]$_.SizeMB},Created     \nTo remove all snapshotsÂ from a server, run the below command. Include the -RunAsync command to run the snapshot removal as a background task instead of waiting for the removal to complete.\n1Get-VM -Name \u0026#34;x\u0026#34; | Get-Snapshot | Remove-Snapshot -RunAsync I have also written a basic PowerShell tool to manage Snapshots. If you encounter any issues with it, just let me know via the Contact page and I will happily provide assistance.\n    \nSnapshotManagement.ps1\n","link":"https://garyflynn.com/post/managing-snapshots-with-powercli/","section":"post","tags":["PowerCLI","Powershell","Snapshot","vCenter","VMware","vSphere"],"title":"Managing Snapshots with PowerCLI"},{"body":"","link":"https://garyflynn.com/tags/powercli/","section":"tags","tags":null,"title":"PowerCLI"},{"body":"","link":"https://garyflynn.com/tags/snapshot/","section":"tags","tags":null,"title":"Snapshot"},{"body":"For many organisations, PowerShell remoting is done through a scripthost server where maximum concurrent session limits and maximum connected user limits can be reached. As explained in this Microsoft blog, the following error might be encountered.\nPS\u0026gt; New-PSSession \\[localhost\\] Connecting to remote server failed with the following error message : The WS-Management service cannot process the request. This user isÂ allowed a maximum number of 5 concurrent shells, which has been exceeded. Close existing shells or raise the quota for this user. For more information, see the about\\_Remote\\_Troubleshooting Help topic. \\+ CategoryInfoÂ : OpenError: (System.Managemeâ¦.RemoteRunspa ce:RemoteRunspace) \\[\\], PSRemotingTransportException \\+ FullyQualifiedErrorId : PSSessionOpenFailed\nOpen a PowerShell session and run the following commands to get the current config.\n1PS\u0026gt; cd WSMan:\\localhost\\Shell 2PS\u0026gt; dir     Run the command below to increase the number of maximum shells per user\n1PS\u0026gt; Set-Item .\\MaxShellsPerUser 120     Run the command below to set the maximum number of concurrent users\n1PS\u0026gt; Set-Item .\\MaxConcurrentUsers 100     Check the configurations have been updated\n1PS\u0026gt; dir     For the configurations changed above, I would recommend a minimum of 2 vCPU and 4 GB Memory.\n","link":"https://garyflynn.com/post/increase-winrm-powershell-limits/","section":"post","tags":["Microsoft","Microsoft","Powershell","WinRM"],"title":"Increase WinRM / PowerShell Limits"},{"body":"","link":"https://garyflynn.com/tags/winrm/","section":"tags","tags":null,"title":"WinRM"},{"body":"    Hi! I'm Gary. The human, not the roo. My life motto has always been \u0026quot;work hard, play harder\u0026quot;. I always throw myself into my work but will always back this up with adventures across the world. This page is a collection of some handy tech tips I have discovered whilst working in Australia and the United Kingdom across the Public and Private sectors working on various client sites.\nAchievements\n   VCP CMA 2021 VCAP CMA Deploy 2021                     vExpert 2023 vExpert Cloud Management 2023 vExpert Pro 2023 vExpert 4 Years                           Terraform Associate Terraform CHIP HashiCorp Ambassador 2023                       Follow Me On Social Media\nTwitterÂ |Â LinkedIn\nWant To Learn More? I love hearing from readers, and so if you find yourself with any questions, comments, criticisms, or praise of a post, then be sure to let me know (I'll get back to you, I promise).\nThanks for reading!\nGary\n","link":"https://garyflynn.com/about/","section":"","tags":null,"title":"About"},{"body":"","link":"https://garyflynn.com/categories/","section":"categories","tags":null,"title":"Categories"},{"body":"","link":"https://garyflynn.com/tags/index/","section":"tags","tags":null,"title":"index"},{"body":"","link":"https://garyflynn.com/series/","section":"series","tags":null,"title":"Series"}]