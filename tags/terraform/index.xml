<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Terraform on Clarity</title><link>https://example.com/tags/terraform/</link><description>Recent content in Terraform on Clarity</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright><lastBuildDate>Mon, 03 May 2021 15:00:57 +0000</lastBuildDate><atom:link href="https://example.com/tags/terraform/index.xml" rel="self" type="application/rss+xml"/><item><title>Setup vRealize Automation using Terraform</title><link>https://example.com/post/setup-vrealize-automation-using-terraform/</link><pubDate>Mon, 03 May 2021 15:00:57 +0000</pubDate><guid>https://example.com/post/setup-vrealize-automation-using-terraform/</guid><description>
VMware has created a HashiCorp Terraform provider which can be used to set up your vRealize Automation (vRA) infrastructure, along with requesting deployments and consuming XaaS resources. This post will cover the basics of setting up vRA using Terraform.
The first two posts in this series cover the basics of Infrastructure as Code with vRA and Terraform along with creating your first Terraform configuration to deploy a vSphere virtual machine. To get started, have a read of the documentation available for either vRA 8 or vRA 7.</description></item><item><title>Create Your First vSphere Terraform Configuration</title><link>https://example.com/post/create-your-first-vsphere-terraform-configuration/</link><pubDate>Mon, 01 Feb 2021 19:36:37 +0000</pubDate><guid>https://example.com/post/create-your-first-vsphere-terraform-configuration/</guid><description>
To get started with HashiCorp Terraform, you can download the simple executable file from HashiCorp here. To understand the basics of Infrastructure as Code and Terraform, have a read of the post available here.
Terraform configuration files are text files with a .tf file extension. To get started, create a new folder for this configuration, along with a file called vsphere.tf. The first part to creating a Terraform configuration file is to define the provider you will interact with.</description></item><item><title>vRA &amp; Terraform: A New Way to Deploy</title><link>https://example.com/post/vra-and-terraform-a-new-way-to-deploy/</link><pubDate>Fri, 29 Jan 2021 10:10:05 +0000</pubDate><guid>https://example.com/post/vra-and-terraform-a-new-way-to-deploy/</guid><description>
On January 28th 2021, I presented at the Automation User Group about vRealize Automation and Terraform and how they work together to provide a new way to deploy your infrastructure. The recording of the session will be available here and the slides are available from here.
vRealize Automation Cloud What is Infrastructure as Code? Two Approaches: Imperative vs Declarative What is Terraform (OSS)? Additional Resources vRealize Automation Cloud VMware vRealize Automation (vRA) Cloud allows you to provide multi-cloud infrastructure and application delivery to your end-users.</description></item><item><title>vRealize Automation 8.2 - Terraform Configurations</title><link>https://example.com/post/vrealize-automation-82-terraform-configurations/</link><pubDate>Mon, 23 Nov 2020 14:40:26 +0000</pubDate><guid>https://example.com/post/vrealize-automation-82-terraform-configurations/</guid><description>
vRealize Automation (vRA) 8.2 added support for running your Terraform (TF) configurations directly from the vRA interface. Simply register your code repository endpoint, either GitLab or GitHub, and select which Terraform configuration to run. The vRA logic will even map the deployed resources to your vRA Cloud Accounts, Cloud Zones, and deployed resource objects. This functionality is fantastic to extend the capabilities beyond the supported resource types. You could use the TF configurations to deploy an F5 load balancer, an Azure and AWS VM, as well as creating your Grafana dashboards and registering your Datadog agents all from a single configuration.</description></item></channel></rss>