<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Terraform on Gary Flynn</title>
    <link>https://garyflynn.com/tags/terraform/</link>
    <description>Recent content in Terraform on Gary Flynn</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 18 Aug 2024 21:00:00 +1000</lastBuildDate><atom:link href="https://garyflynn.com/tags/terraform/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Aria Automation &amp; Terraform - Part 2</title>
      <link>https://garyflynn.com/post/aria-automation-and-terraform-part-two/</link>
      <pubDate>Sun, 18 Aug 2024 21:00:00 +1000</pubDate>
      
      <guid>https://garyflynn.com/post/aria-automation-and-terraform-part-two/</guid>
      <description>
        
          
            &lt;p&gt;This guide will cover the creation of the Aria Automation Cloud Accounts and Cloud Zones. Before getting started, follow &lt;a href=&#34;https://garyflynn.com/post/aria-automation-and-terraform-part-one/&#34;&gt;Part 1&lt;/a&gt; to configure the Aria Automation / VCF Automation provider for terraform.&lt;/p&gt;
&lt;p&gt;The first terraform resource to create is the Cloud Accounts. Create a new file called &amp;quot;cloud_accounts.tf&amp;quot; and add the code below. The first account to be added is to a vSphere environment. The resource is of type &#39;vra_cloud_account_vsphere&#39; and called &#39;homelab&#39; in this example. A second data source is required to enumerate the available regions within the vSphere environment.&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>Getting Started with Aria Automation &amp; Terraform</title>
      <link>https://garyflynn.com/post/aria-automation-and-terraform-part-one/</link>
      <pubDate>Sat, 20 Jul 2024 21:00:00 +1000</pubDate>
      
      <guid>https://garyflynn.com/post/aria-automation-and-terraform-part-one/</guid>
      <description>
        
          
            &lt;p&gt;Using Terraform to consume Aria Automation / VCF Automation is easy to configure and to get started, have a read of the below code snippets. This guide will cover the initial setup and configuration of the Aria Automation Terraform provider and assumes that you have the Terraform executable installed locally. If not, install locally following the &lt;a href=&#34;https://developer.hashicorp.com/terraform/install&#34;&gt;HashiCorp documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Part One of this guide will cover authenticating to the Aria Automation / VCF Automation instance.&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>Aria Automation &amp; Terraform: A New Way to Deploy</title>
      <link>https://garyflynn.com/post/aria-automation-and-terraform-a-new-way-to-deploy/</link>
      <pubDate>Sat, 29 Jun 2024 10:10:05 +0000</pubDate>
      
      <guid>https://garyflynn.com/post/aria-automation-and-terraform-a-new-way-to-deploy/</guid>
      <description>
        
          
            &lt;p&gt;A few years ago now, back on January 28th 2021, I presented at the &lt;a href=&#34;https://www.autoug.io/&#34;&gt;Automation User Group&lt;/a&gt; about vRealize Automation and Terraform and how they work together to provide a new way to deploy your infrastructure. The recording of the session is available &lt;a href=&#34;https://youtu.be/Q1XcuxTL6CQ&#34;&gt;here&lt;/a&gt; and the slides are available from &lt;a href=&#34;https://garyflynn.com/wp-content/uploads/2021/01/vRA-and-Terraform-A-New-Way-to-Deploy.pdf&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://garyflynn.com/post/aria-automation-and-terraform-a-new-way-to-deploy/#what-is-infrastructure-as-code&#34;&gt;What is Infrastructure as Code?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://garyflynn.com/post/aria-automation-and-terraform-a-new-way-to-deploy/#two-approaches-imperative-vs-declarative&#34;&gt;Two Approaches: Imperative vs Declarative&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://garyflynn.com/post/aria-automation-and-terraform-a-new-way-to-deploy/#what-is-terraform-oss&#34;&gt;What is Terraform (OSS)?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://garyflynn.com/post/aria-automation-and-terraform-a-new-way-to-deploy/#additional-resources&#34;&gt;Additional Resources&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;what-is-infrastructure-as-code&#34;&gt;&lt;strong&gt;What is Infrastructure as Code?&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Infrastructure as Code (IaC) is a way to manage and provision your infrastructure by using machine-readable configuration files. These configuration files can then be stored in a version control system like GitHub or GitLab which enables you to share these configurations across your team.&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>Create Your First vSphere Terraform Configuration</title>
      <link>https://garyflynn.com/post/create-your-first-vsphere-terraform-configuration/</link>
      <pubDate>Mon, 01 Feb 2021 19:36:37 +0000</pubDate>
      
      <guid>https://garyflynn.com/post/create-your-first-vsphere-terraform-configuration/</guid>
      <description>
        
          
            &lt;p&gt;To get started with HashiCorp Terraform, you can download the simple executable file from HashiCorp &lt;a href=&#34;https://www.terraform.io/downloads.html&#34;&gt;here&lt;/a&gt;. To understand the basics of Infrastructure as Code and Terraform, have a read of the post available &lt;a href=&#34;https://garyflynn.com/post/aria-automation-and-terraform-a-new-way-to-deploy/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Terraform configuration files are text files with a .tf file extension. To get started, create a new folder for this configuration, along with a file called &lt;em&gt;vsphere.tf&lt;/em&gt;. The first part to creating a Terraform configuration file is to define the provider you will interact with. In this example, it will create a virtual machine using the vSphere provider. The vSphere provider has some required fields like the user, password and server name. Create the provider block referring to &amp;quot;vsphere&amp;quot; and set the required fields with valid values for your environment.&lt;/p&gt;
          
          
        
      </description>
    </item>
    
    <item>
      <title>vRealize Automation 8.2 - Terraform Configurations</title>
      <link>https://garyflynn.com/post/vrealize-automation-82-terraform-configurations/</link>
      <pubDate>Mon, 23 Nov 2020 14:40:26 +0000</pubDate>
      
      <guid>https://garyflynn.com/post/vrealize-automation-82-terraform-configurations/</guid>
      <description>
        
          
            &lt;p&gt;vRealize Automation (vRA) 8.2 added support for running your Terraform (TF) configurations directly from the vRA interface. Simply register your code repository endpoint, either GitLab or GitHub, and select which Terraform configuration to run. The vRA logic will even map the deployed resources to your vRA Cloud Accounts, Cloud Zones, and deployed resource objects. This functionality is fantastic to extend the capabilities beyond the supported resource types. You could use the TF configurations to deploy an F5 load balancer, an Azure and AWS VM, as well as creating your Grafana dashboards and registering your Datadog agents all from a single configuration.&lt;/p&gt;
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
