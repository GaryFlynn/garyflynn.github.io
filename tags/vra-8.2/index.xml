<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>vRA 8.2 on Gary Flynn</title>
    <link>https://garyflynn.github.io/tags/vra-8.2/</link>
    <description>Recent content in vRA 8.2 on Gary Flynn</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Thu, 03 Dec 2020 14:57:40 +0000</lastBuildDate><atom:link href="https://garyflynn.github.io/tags/vra-8.2/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>vRealize Automation 8.x â€“ Change Internal Kubernetes IP Range</title>
      <link>https://garyflynn.github.io/post/vrealize-automation-8x-change-internal-kubernetes-ip-range/</link>
      <pubDate>Thu, 03 Dec 2020 14:57:40 +0000</pubDate>
      
      <guid>https://garyflynn.github.io/post/vrealize-automation-8x-change-internal-kubernetes-ip-range/</guid>
      <description>
        
          
            vRealize Automation (vRA) 8.2 added support for changing the IP address range used by the internal Kubernetes cluster, which is great news as many organisation already use the 10.244.0.0/21 address space. Unfortunately if your network already uses the ranges 10.244.0.0/22 or 10.244.4.0/22, you will likely encounter issues, such a provisioning timeouts.
To resolve this issue in vRA 8.2, run the below commands to view your current configuration, and to update to a new range.
          
          
        
      </description>
    </item>
    
    <item>
      <title>vRealize Automation 8.2 - Terraform Configurations</title>
      <link>https://garyflynn.github.io/post/vrealize-automation-82-terraform-configurations/</link>
      <pubDate>Mon, 23 Nov 2020 14:40:26 +0000</pubDate>
      
      <guid>https://garyflynn.github.io/post/vrealize-automation-82-terraform-configurations/</guid>
      <description>
        
          
            vRealize Automation (vRA) 8.2 added support for running your Terraform (TF) configurations directly from the vRA interface. Simply register your code repository endpoint, either GitLab or GitHub, and select which Terraform configuration to run. The vRA logic will even map the deployed resources to your vRA Cloud Accounts, Cloud Zones, and deployed resource objects. This functionality is fantastic to extend the capabilities beyond the supported resource types. You could use the TF configurations to deploy an F5 load balancer, an Azure and AWS VM, as well as creating your Grafana dashboards and registering your Datadog agents all from a single configuration.
          
          
        
      </description>
    </item>
    
  </channel>
</rss>
